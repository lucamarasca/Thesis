grammar org.xtext.BPMN_translator with org.eclipse.xtext.common.Terminals

generate bPMN_translator "http://www.xtext.org/BPMN_translator"
import "http://www.eclipse.org/emf/2002/Ecore" as ecore

Model:
	
	model += Xml
;



Xml:
	{Xml} opening_tag += (Opening)
;


Opening:
		({Opening} (((Prova += Open ) (Prova1 += Close)) 
			
			(((Prova += Open ) (Prova1 += Close))*) 
			(("<" HEAD ":" KEYWORDS ((HEAD ":") | (KEYWORDS "=" value+=STRING))*) "/>")*)
			| 
	  	{Opening} (("<" HEAD ":" KEYWORDS ((HEAD ":") | (KEYWORDS "=" value+=STRING))*) "/>")*)	
;

Data:
	(BODY | KEYWORDS  | STRING  )
;
Open:
	
	{Opens} ("<" HEAD ":" KEYWORDS  ((HEAD ":") | (KEYWORDS "=" value+=STRING))* ">")
	( Data | (prova += Opening)) 
	 
;

Singleton:
	{Singleton} ("<" HEAD ":" KEYWORDS  ((HEAD ":") | (KEYWORDS "=" value+=STRING))*)  
	"/>"
;

Close:

	{Close} ("</" HEAD ":" KEYWORDS  ">") 
;


terminal HEAD:
	("bpmn"|"bpmndi"|"camunda"|"xsi")
;



terminal KEYWORDS: "id" | "name" |  "isExecutable" | "sourceRef" | "processRef" | "targetRef"
	| "calledElement" | "type" | "expression" | "value" | "resultVariable" | "asyncBefore"
	| "class" | "event" | "startEvent"| "task" | "messageEventDefinition" | "sequenceFlow" 
	| "condition" | "association" | "outgoing" | "serviceTask" | "process"
	| "incoming" | "intermediateCatchEvent" | "conditionalEventDefinition"
	| "endEvent" | "textAnnotation" | "text" | "dataStoreReference"
	| "callActivity" | "laneSet" | "lane" | "flowNodeRef" 
	| "dataOutputAssociation" | "exclusiveGateway" 
	| "extensionElements" | "inputOutput" | "list" | "inputParameter"
	| "outputParameter" |  "properties" | "property"
	| "field" | "string" | "scriptTask" | "script" 
	| "executionListener" | "timerEventDefinition" | "timeDuration"
	| "parallelGateway";



terminal BODY returns ecore::EString : ('a'..'z'|'A'..'Z'|INT|'_')* ;
        