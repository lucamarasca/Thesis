/**
 * generated by Xtext 2.23.0
 */
package org.xtext.bPMN_translator.impl;

import java.util.Collection;

import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.eclipse.emf.ecore.util.EObjectContainmentEList;
import org.eclipse.emf.ecore.util.InternalEList;

import org.xtext.bPMN_translator.BPMN_translatorPackage;
import org.xtext.bPMN_translator.codex;
import org.xtext.bPMN_translator.device;
import org.xtext.bPMN_translator.protocol;
import org.xtext.bPMN_translator.sensor;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>codex</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.xtext.bPMN_translator.impl.codexImpl#getDevice_code <em>Device code</em>}</li>
 *   <li>{@link org.xtext.bPMN_translator.impl.codexImpl#getProtocol <em>Protocol</em>}</li>
 *   <li>{@link org.xtext.bPMN_translator.impl.codexImpl#getSensor_code <em>Sensor code</em>}</li>
 * </ul>
 *
 * @generated
 */
public class codexImpl extends MinimalEObjectImpl.Container implements codex
{
  /**
   * The cached value of the '{@link #getDevice_code() <em>Device code</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getDevice_code()
   * @generated
   * @ordered
   */
  protected EList<device> device_code;

  /**
   * The cached value of the '{@link #getProtocol() <em>Protocol</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getProtocol()
   * @generated
   * @ordered
   */
  protected EList<protocol> protocol;

  /**
   * The cached value of the '{@link #getSensor_code() <em>Sensor code</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getSensor_code()
   * @generated
   * @ordered
   */
  protected EList<sensor> sensor_code;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected codexImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return BPMN_translatorPackage.Literals.CODEX;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<device> getDevice_code()
  {
    if (device_code == null)
    {
      device_code = new EObjectContainmentEList<device>(device.class, this, BPMN_translatorPackage.CODEX__DEVICE_CODE);
    }
    return device_code;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<protocol> getProtocol()
  {
    if (protocol == null)
    {
      protocol = new EObjectContainmentEList<protocol>(protocol.class, this, BPMN_translatorPackage.CODEX__PROTOCOL);
    }
    return protocol;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<sensor> getSensor_code()
  {
    if (sensor_code == null)
    {
      sensor_code = new EObjectContainmentEList<sensor>(sensor.class, this, BPMN_translatorPackage.CODEX__SENSOR_CODE);
    }
    return sensor_code;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case BPMN_translatorPackage.CODEX__DEVICE_CODE:
        return ((InternalEList<?>)getDevice_code()).basicRemove(otherEnd, msgs);
      case BPMN_translatorPackage.CODEX__PROTOCOL:
        return ((InternalEList<?>)getProtocol()).basicRemove(otherEnd, msgs);
      case BPMN_translatorPackage.CODEX__SENSOR_CODE:
        return ((InternalEList<?>)getSensor_code()).basicRemove(otherEnd, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case BPMN_translatorPackage.CODEX__DEVICE_CODE:
        return getDevice_code();
      case BPMN_translatorPackage.CODEX__PROTOCOL:
        return getProtocol();
      case BPMN_translatorPackage.CODEX__SENSOR_CODE:
        return getSensor_code();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @SuppressWarnings("unchecked")
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case BPMN_translatorPackage.CODEX__DEVICE_CODE:
        getDevice_code().clear();
        getDevice_code().addAll((Collection<? extends device>)newValue);
        return;
      case BPMN_translatorPackage.CODEX__PROTOCOL:
        getProtocol().clear();
        getProtocol().addAll((Collection<? extends protocol>)newValue);
        return;
      case BPMN_translatorPackage.CODEX__SENSOR_CODE:
        getSensor_code().clear();
        getSensor_code().addAll((Collection<? extends sensor>)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case BPMN_translatorPackage.CODEX__DEVICE_CODE:
        getDevice_code().clear();
        return;
      case BPMN_translatorPackage.CODEX__PROTOCOL:
        getProtocol().clear();
        return;
      case BPMN_translatorPackage.CODEX__SENSOR_CODE:
        getSensor_code().clear();
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case BPMN_translatorPackage.CODEX__DEVICE_CODE:
        return device_code != null && !device_code.isEmpty();
      case BPMN_translatorPackage.CODEX__PROTOCOL:
        return protocol != null && !protocol.isEmpty();
      case BPMN_translatorPackage.CODEX__SENSOR_CODE:
        return sensor_code != null && !sensor_code.isEmpty();
    }
    return super.eIsSet(featureID);
  }

} //codexImpl
