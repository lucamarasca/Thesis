/**
 * generated by Xtext 2.23.0
 */
package org.xtext.bPMN_translator.impl;

import java.util.Collection;

import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.eclipse.emf.ecore.util.EDataTypeEList;
import org.eclipse.emf.ecore.util.EObjectContainmentEList;
import org.eclipse.emf.ecore.util.InternalEList;

import org.xtext.bPMN_translator.BPMN_translatorPackage;
import org.xtext.bPMN_translator.content;
import org.xtext.bPMN_translator.element;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>content</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.xtext.bPMN_translator.impl.contentImpl#getElement <em>Element</em>}</li>
 *   <li>{@link org.xtext.bPMN_translator.impl.contentImpl#getBody <em>Body</em>}</li>
 *   <li>{@link org.xtext.bPMN_translator.impl.contentImpl#getKeywords <em>Keywords</em>}</li>
 *   <li>{@link org.xtext.bPMN_translator.impl.contentImpl#getData <em>Data</em>}</li>
 * </ul>
 *
 * @generated
 */
public class contentImpl extends MinimalEObjectImpl.Container implements content
{
  /**
   * The cached value of the '{@link #getElement() <em>Element</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getElement()
   * @generated
   * @ordered
   */
  protected EList<element> element;

  /**
   * The cached value of the '{@link #getBody() <em>Body</em>}' attribute list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getBody()
   * @generated
   * @ordered
   */
  protected EList<String> body;

  /**
   * The cached value of the '{@link #getKeywords() <em>Keywords</em>}' attribute list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getKeywords()
   * @generated
   * @ordered
   */
  protected EList<String> keywords;

  /**
   * The cached value of the '{@link #getData() <em>Data</em>}' attribute list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getData()
   * @generated
   * @ordered
   */
  protected EList<String> data;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected contentImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return BPMN_translatorPackage.Literals.CONTENT;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<element> getElement()
  {
    if (element == null)
    {
      element = new EObjectContainmentEList<element>(element.class, this, BPMN_translatorPackage.CONTENT__ELEMENT);
    }
    return element;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<String> getBody()
  {
    if (body == null)
    {
      body = new EDataTypeEList<String>(String.class, this, BPMN_translatorPackage.CONTENT__BODY);
    }
    return body;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<String> getKeywords()
  {
    if (keywords == null)
    {
      keywords = new EDataTypeEList<String>(String.class, this, BPMN_translatorPackage.CONTENT__KEYWORDS);
    }
    return keywords;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<String> getData()
  {
    if (data == null)
    {
      data = new EDataTypeEList<String>(String.class, this, BPMN_translatorPackage.CONTENT__DATA);
    }
    return data;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case BPMN_translatorPackage.CONTENT__ELEMENT:
        return ((InternalEList<?>)getElement()).basicRemove(otherEnd, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case BPMN_translatorPackage.CONTENT__ELEMENT:
        return getElement();
      case BPMN_translatorPackage.CONTENT__BODY:
        return getBody();
      case BPMN_translatorPackage.CONTENT__KEYWORDS:
        return getKeywords();
      case BPMN_translatorPackage.CONTENT__DATA:
        return getData();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @SuppressWarnings("unchecked")
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case BPMN_translatorPackage.CONTENT__ELEMENT:
        getElement().clear();
        getElement().addAll((Collection<? extends element>)newValue);
        return;
      case BPMN_translatorPackage.CONTENT__BODY:
        getBody().clear();
        getBody().addAll((Collection<? extends String>)newValue);
        return;
      case BPMN_translatorPackage.CONTENT__KEYWORDS:
        getKeywords().clear();
        getKeywords().addAll((Collection<? extends String>)newValue);
        return;
      case BPMN_translatorPackage.CONTENT__DATA:
        getData().clear();
        getData().addAll((Collection<? extends String>)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case BPMN_translatorPackage.CONTENT__ELEMENT:
        getElement().clear();
        return;
      case BPMN_translatorPackage.CONTENT__BODY:
        getBody().clear();
        return;
      case BPMN_translatorPackage.CONTENT__KEYWORDS:
        getKeywords().clear();
        return;
      case BPMN_translatorPackage.CONTENT__DATA:
        getData().clear();
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case BPMN_translatorPackage.CONTENT__ELEMENT:
        return element != null && !element.isEmpty();
      case BPMN_translatorPackage.CONTENT__BODY:
        return body != null && !body.isEmpty();
      case BPMN_translatorPackage.CONTENT__KEYWORDS:
        return keywords != null && !keywords.isEmpty();
      case BPMN_translatorPackage.CONTENT__DATA:
        return data != null && !data.isEmpty();
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (body: ");
    result.append(body);
    result.append(", keywords: ");
    result.append(keywords);
    result.append(", data: ");
    result.append(data);
    result.append(')');
    return result.toString();
  }

} //contentImpl
