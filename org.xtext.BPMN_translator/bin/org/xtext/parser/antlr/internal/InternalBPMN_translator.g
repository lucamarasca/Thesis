/*
 * generated by Xtext 2.23.0
 */
grammar InternalBPMN_translator;

options {
	superClass=AbstractInternalAntlrParser;
}

@lexer::header {
package org.xtext.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package org.xtext.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import org.xtext.services.BPMN_translatorGrammarAccess;

}

@parser::members {

 	private BPMN_translatorGrammarAccess grammarAccess;

    public InternalBPMN_translatorParser(TokenStream input, BPMN_translatorGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "Model";
   	}

   	@Override
   	protected BPMN_translatorGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleModel
entryRuleModel returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getModelRule()); }
	iv_ruleModel=ruleModel
	{ $current=$iv_ruleModel.current; }
	EOF;

// Rule Model
ruleModel returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getModelAccess().getModelXmlParserRuleCall_0());
			}
			lv_model_0_0=ruleXml
			{
				if ($current==null) {
					$current = createModelElementForParent(grammarAccess.getModelRule());
				}
				add(
					$current,
					"model",
					lv_model_0_0,
					"org.xtext.BPMN_translator.Xml");
				afterParserOrEnumRuleCall();
			}
		)
	)
;

// Entry rule entryRuleXml
entryRuleXml returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getXmlRule()); }
	iv_ruleXml=ruleXml
	{ $current=$iv_ruleXml.current; }
	EOF;

// Rule Xml
ruleXml returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getXmlAccess().getXmlAction_0(),
					$current);
			}
		)
		(
			{
				newCompositeNode(grammarAccess.getXmlAccess().getPrologParserRuleCall_1());
			}
			ruleprolog
			{
				afterParserOrEnumRuleCall();
			}
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getXmlAccess().getProvaElementParserRuleCall_2_0());
				}
				lv_prova_2_0=ruleelement
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getXmlRule());
					}
					add(
						$current,
						"prova",
						lv_prova_2_0,
						"org.xtext.BPMN_translator.element");
					afterParserOrEnumRuleCall();
				}
			)
		)*
	)
;

// Entry rule entryRuleprolog
entryRuleprolog returns [String current=null]:
	{ newCompositeNode(grammarAccess.getPrologRule()); }
	iv_ruleprolog=ruleprolog
	{ $current=$iv_ruleprolog.current.getText(); }
	EOF;

// Rule prolog
ruleprolog returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		kw='<?'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getPrologAccess().getLessThanSignQuestionMarkKeyword_0());
		}
		this_HEAD_1=RULE_HEAD
		{
			$current.merge(this_HEAD_1);
		}
		{
			newLeafNode(this_HEAD_1, grammarAccess.getPrologAccess().getHEADTerminalRuleCall_1());
		}
		kw='version='
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getPrologAccess().getVersionKeyword_2());
		}
		this_STRING_3=RULE_STRING
		{
			$current.merge(this_STRING_3);
		}
		{
			newLeafNode(this_STRING_3, grammarAccess.getPrologAccess().getSTRINGTerminalRuleCall_3());
		}
		kw='encoding='
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getPrologAccess().getEncodingKeyword_4());
		}
		this_STRING_5=RULE_STRING
		{
			$current.merge(this_STRING_5);
		}
		{
			newLeafNode(this_STRING_5, grammarAccess.getPrologAccess().getSTRINGTerminalRuleCall_5());
		}
		kw='?>'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getPrologAccess().getQuestionMarkGreaterThanSignKeyword_6());
		}
	)
;

// Entry rule entryRuleelement
entryRuleelement returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getElementRule()); }
	iv_ruleelement=ruleelement
	{ $current=$iv_ruleelement.current; }
	EOF;

// Rule element
ruleelement returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getElementAccess().getOpenOpenParserRuleCall_0_0_0());
					}
					lv_open_0_0=ruleOpen
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getElementRule());
						}
						add(
							$current,
							"open",
							lv_open_0_0,
							"org.xtext.BPMN_translator.Open");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getElementAccess().getContentsContentParserRuleCall_0_1_0());
					}
					lv_contents_1_0=rulecontent
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getElementRule());
						}
						add(
							$current,
							"contents",
							lv_contents_1_0,
							"org.xtext.BPMN_translator.content");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getElementAccess().getClose_tagCloseParserRuleCall_0_2_0());
					}
					lv_close_tag_2_0=ruleClose
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getElementRule());
						}
						add(
							$current,
							"close_tag",
							lv_close_tag_2_0,
							"org.xtext.BPMN_translator.Close");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getElementAccess().getSingleton_tagSingletonParserRuleCall_1_0());
				}
				lv_singleton_tag_3_0=ruleSingleton
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getElementRule());
					}
					add(
						$current,
						"singleton_tag",
						lv_singleton_tag_3_0,
						"org.xtext.BPMN_translator.Singleton");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRulecontent
entryRulecontent returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getContentRule()); }
	iv_rulecontent=rulecontent
	{ $current=$iv_rulecontent.current; }
	EOF;

// Rule content
rulecontent returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getContentAccess().getContentAction_0(),
					$current);
			}
		)
		(
			(
				(
					(
						(
							lv_type_1_1='_TASK'
							{
								newLeafNode(lv_type_1_1, grammarAccess.getContentAccess().getType_TASKKeyword_1_0_0_0_0());
							}
							{
								if ($current==null) {
									$current = createModelElement(grammarAccess.getContentRule());
								}
								addWithLastConsumed($current, "type", lv_type_1_1, null);
							}
							    |
							lv_type_1_2='_GATEWAY'
							{
								newLeafNode(lv_type_1_2, grammarAccess.getContentAccess().getType_GATEWAYKeyword_1_0_0_0_1());
							}
							{
								if ($current==null) {
									$current = createModelElement(grammarAccess.getContentRule());
								}
								addWithLastConsumed($current, "type", lv_type_1_2, null);
							}
						)
					)
				)
				otherlv_2='{'
				{
					newLeafNode(otherlv_2, grammarAccess.getContentAccess().getLeftCurlyBracketKeyword_1_0_1());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getContentAccess().getCodexCodexParserRuleCall_1_0_2_0());
						}
						lv_codex_3_0=rulecodex
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getContentRule());
							}
							add(
								$current,
								"codex",
								lv_codex_3_0,
								"org.xtext.BPMN_translator.codex");
							afterParserOrEnumRuleCall();
						}
					)
				)
				otherlv_4='}'
				{
					newLeafNode(otherlv_4, grammarAccess.getContentAccess().getRightCurlyBracketKeyword_1_0_3());
				}
			)
			    |
			(
				(
					{
						newCompositeNode(grammarAccess.getContentAccess().getElementElementParserRuleCall_1_1_0());
					}
					lv_element_5_0=ruleelement
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getContentRule());
						}
						add(
							$current,
							"element",
							lv_element_5_0,
							"org.xtext.BPMN_translator.element");
						afterParserOrEnumRuleCall();
					}
				)
			)
			    |
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getContentAccess().getBodyPreconditionsParserRuleCall_1_2_0_0());
						}
						lv_body_6_0=rulepreconditions
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getContentRule());
							}
							add(
								$current,
								"body",
								lv_body_6_0,
								"org.xtext.BPMN_translator.preconditions");
							afterParserOrEnumRuleCall();
						}
					)
				)*
				(
					(
						(
							lv_body_7_1=RULE_BODY
							{
								newLeafNode(lv_body_7_1, grammarAccess.getContentAccess().getBodyBODYTerminalRuleCall_1_2_1_0_0());
							}
							{
								if ($current==null) {
									$current = createModelElement(grammarAccess.getContentRule());
								}
								addWithLastConsumed(
									$current,
									"body",
									lv_body_7_1,
									"org.xtext.BPMN_translator.BODY");
							}
							    |
							{
								newCompositeNode(grammarAccess.getContentAccess().getBodyVariablesParserRuleCall_1_2_1_0_1());
							}
							lv_body_7_2=rulevariables
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getContentRule());
								}
								add(
									$current,
									"body",
									lv_body_7_2,
									"org.xtext.BPMN_translator.variables");
								afterParserOrEnumRuleCall();
							}
						)
					)
				)
				(
					(
						{
							newCompositeNode(grammarAccess.getContentAccess().getBodyConditionsParserRuleCall_1_2_2_0());
						}
						lv_body_8_0=ruleconditions
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getContentRule());
							}
							add(
								$current,
								"body",
								lv_body_8_0,
								"org.xtext.BPMN_translator.conditions");
							afterParserOrEnumRuleCall();
						}
					)
				)*
			)
			    |
			(
				(
					lv_keywords_9_0=RULE_KEYWORDS
					{
						newLeafNode(lv_keywords_9_0, grammarAccess.getContentAccess().getKeywordsKEYWORDSTerminalRuleCall_1_3_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getContentRule());
						}
						addWithLastConsumed(
							$current,
							"keywords",
							lv_keywords_9_0,
							"org.xtext.BPMN_translator.KEYWORDS");
					}
				)
			)
			    |
			(
				(
					lv_data_10_0=RULE_STRING
					{
						newLeafNode(lv_data_10_0, grammarAccess.getContentAccess().getDataSTRINGTerminalRuleCall_1_4_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getContentRule());
						}
						addWithLastConsumed(
							$current,
							"data",
							lv_data_10_0,
							"org.eclipse.xtext.common.Terminals.STRING");
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleOpen
entryRuleOpen returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getOpenRule()); }
	iv_ruleOpen=ruleOpen
	{ $current=$iv_ruleOpen.current; }
	EOF;

// Rule Open
ruleOpen returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='<'
		{
			newLeafNode(otherlv_0, grammarAccess.getOpenAccess().getLessThanSignKeyword_0());
		}
		(
			(
				lv_head_1_0=RULE_HEAD
				{
					newLeafNode(lv_head_1_0, grammarAccess.getOpenAccess().getHeadHEADTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getOpenRule());
					}
					addWithLastConsumed(
						$current,
						"head",
						lv_head_1_0,
						"org.xtext.BPMN_translator.HEAD");
				}
			)
		)
		otherlv_2=':'
		{
			newLeafNode(otherlv_2, grammarAccess.getOpenAccess().getColonKeyword_2());
		}
		(
			(
				lv_keywords_3_0=RULE_KEYWORDS
				{
					newLeafNode(lv_keywords_3_0, grammarAccess.getOpenAccess().getKeywordsKEYWORDSTerminalRuleCall_3_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getOpenRule());
					}
					addWithLastConsumed(
						$current,
						"keywords",
						lv_keywords_3_0,
						"org.xtext.BPMN_translator.KEYWORDS");
				}
			)
		)
		(
			(
				(
					(
						lv_head1_4_0=RULE_HEAD
						{
							newLeafNode(lv_head1_4_0, grammarAccess.getOpenAccess().getHead1HEADTerminalRuleCall_4_0_0_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getOpenRule());
							}
							addWithLastConsumed(
								$current,
								"head1",
								lv_head1_4_0,
								"org.xtext.BPMN_translator.HEAD");
						}
					)
				)
				otherlv_5=':'
				{
					newLeafNode(otherlv_5, grammarAccess.getOpenAccess().getColonKeyword_4_0_1());
				}
			)
			    |
			(
				(
					(
						(
							lv_head1_6_0=RULE_HEAD
							{
								newLeafNode(lv_head1_6_0, grammarAccess.getOpenAccess().getHead1HEADTerminalRuleCall_4_1_0_0_0());
							}
							{
								if ($current==null) {
									$current = createModelElement(grammarAccess.getOpenRule());
								}
								addWithLastConsumed(
									$current,
									"head1",
									lv_head1_6_0,
									"org.xtext.BPMN_translator.HEAD");
							}
						)
					)
					    |
					(
						(
							lv_keywords1_7_0=RULE_KEYWORDS
							{
								newLeafNode(lv_keywords1_7_0, grammarAccess.getOpenAccess().getKeywords1KEYWORDSTerminalRuleCall_4_1_0_1_0());
							}
							{
								if ($current==null) {
									$current = createModelElement(grammarAccess.getOpenRule());
								}
								addWithLastConsumed(
									$current,
									"keywords1",
									lv_keywords1_7_0,
									"org.xtext.BPMN_translator.KEYWORDS");
							}
						)
					)
				)
				otherlv_8='='
				{
					newLeafNode(otherlv_8, grammarAccess.getOpenAccess().getEqualsSignKeyword_4_1_1());
				}
				(
					(
						lv_value_9_0=RULE_STRING
						{
							newLeafNode(lv_value_9_0, grammarAccess.getOpenAccess().getValueSTRINGTerminalRuleCall_4_1_2_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getOpenRule());
							}
							addWithLastConsumed(
								$current,
								"value",
								lv_value_9_0,
								"org.eclipse.xtext.common.Terminals.STRING");
						}
					)
				)
			)
		)*
		otherlv_10='>'
		{
			newLeafNode(otherlv_10, grammarAccess.getOpenAccess().getGreaterThanSignKeyword_5());
		}
	)
;

// Entry rule entryRuleSingleton
entryRuleSingleton returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSingletonRule()); }
	iv_ruleSingleton=ruleSingleton
	{ $current=$iv_ruleSingleton.current; }
	EOF;

// Rule Singleton
ruleSingleton returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getSingletonAccess().getSingletonAction_0(),
					$current);
			}
		)
		(
			otherlv_1='<'
			{
				newLeafNode(otherlv_1, grammarAccess.getSingletonAccess().getLessThanSignKeyword_1_0());
			}
			this_HEAD_2=RULE_HEAD
			{
				newLeafNode(this_HEAD_2, grammarAccess.getSingletonAccess().getHEADTerminalRuleCall_1_1());
			}
			otherlv_3=':'
			{
				newLeafNode(otherlv_3, grammarAccess.getSingletonAccess().getColonKeyword_1_2());
			}
			(
				(
					lv_keywords_4_0=RULE_KEYWORDS
					{
						newLeafNode(lv_keywords_4_0, grammarAccess.getSingletonAccess().getKeywordsKEYWORDSTerminalRuleCall_1_3_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getSingletonRule());
						}
						addWithLastConsumed(
							$current,
							"keywords",
							lv_keywords_4_0,
							"org.xtext.BPMN_translator.KEYWORDS");
					}
				)
			)
			(
				(
					this_HEAD_5=RULE_HEAD
					{
						newLeafNode(this_HEAD_5, grammarAccess.getSingletonAccess().getHEADTerminalRuleCall_1_4_0_0());
					}
					otherlv_6=':'
					{
						newLeafNode(otherlv_6, grammarAccess.getSingletonAccess().getColonKeyword_1_4_0_1());
					}
				)
				    |
				(
					(
						(
							lv_keywords1_7_0=RULE_KEYWORDS
							{
								newLeafNode(lv_keywords1_7_0, grammarAccess.getSingletonAccess().getKeywords1KEYWORDSTerminalRuleCall_1_4_1_0_0());
							}
							{
								if ($current==null) {
									$current = createModelElement(grammarAccess.getSingletonRule());
								}
								addWithLastConsumed(
									$current,
									"keywords1",
									lv_keywords1_7_0,
									"org.xtext.BPMN_translator.KEYWORDS");
							}
						)
					)
					otherlv_8='='
					{
						newLeafNode(otherlv_8, grammarAccess.getSingletonAccess().getEqualsSignKeyword_1_4_1_1());
					}
					(
						(
							lv_value_9_0=RULE_STRING
							{
								newLeafNode(lv_value_9_0, grammarAccess.getSingletonAccess().getValueSTRINGTerminalRuleCall_1_4_1_2_0());
							}
							{
								if ($current==null) {
									$current = createModelElement(grammarAccess.getSingletonRule());
								}
								addWithLastConsumed(
									$current,
									"value",
									lv_value_9_0,
									"org.eclipse.xtext.common.Terminals.STRING");
							}
						)
					)
				)
			)*
		)
		otherlv_10='/>'
		{
			newLeafNode(otherlv_10, grammarAccess.getSingletonAccess().getSolidusGreaterThanSignKeyword_2());
		}
	)
;

// Entry rule entryRuleClose
entryRuleClose returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCloseRule()); }
	iv_ruleClose=ruleClose
	{ $current=$iv_ruleClose.current; }
	EOF;

// Rule Close
ruleClose returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getCloseAccess().getCloseAction_0(),
					$current);
			}
		)
		(
			otherlv_1='</'
			{
				newLeafNode(otherlv_1, grammarAccess.getCloseAccess().getLessThanSignSolidusKeyword_1_0());
			}
			this_HEAD_2=RULE_HEAD
			{
				newLeafNode(this_HEAD_2, grammarAccess.getCloseAccess().getHEADTerminalRuleCall_1_1());
			}
			otherlv_3=':'
			{
				newLeafNode(otherlv_3, grammarAccess.getCloseAccess().getColonKeyword_1_2());
			}
			this_KEYWORDS_4=RULE_KEYWORDS
			{
				newLeafNode(this_KEYWORDS_4, grammarAccess.getCloseAccess().getKEYWORDSTerminalRuleCall_1_3());
			}
			otherlv_5='>'
			{
				newLeafNode(otherlv_5, grammarAccess.getCloseAccess().getGreaterThanSignKeyword_1_4());
			}
		)
	)
;

// Entry rule entryRulevariables
entryRulevariables returns [String current=null]:
	{ newCompositeNode(grammarAccess.getVariablesRule()); }
	iv_rulevariables=rulevariables
	{ $current=$iv_rulevariables.current.getText(); }
	EOF;

// Rule variables
rulevariables returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			kw='TEMPERATURE'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getVariablesAccess().getTEMPERATUREKeyword_0_0());
			}
			kw='['
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getVariablesAccess().getLeftSquareBracketKeyword_0_1());
			}
			this_BODY_2=RULE_BODY
			{
				$current.merge(this_BODY_2);
			}
			{
				newLeafNode(this_BODY_2, grammarAccess.getVariablesAccess().getBODYTerminalRuleCall_0_2());
			}
			kw=','
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getVariablesAccess().getCommaKeyword_0_3());
			}
			this_BODY_4=RULE_BODY
			{
				$current.merge(this_BODY_4);
			}
			{
				newLeafNode(this_BODY_4, grammarAccess.getVariablesAccess().getBODYTerminalRuleCall_0_4());
			}
			kw=']'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getVariablesAccess().getRightSquareBracketKeyword_0_5());
			}
		)
		    |
		(
			this_BODY_6=RULE_BODY
			{
				$current.merge(this_BODY_6);
			}
			{
				newLeafNode(this_BODY_6, grammarAccess.getVariablesAccess().getBODYTerminalRuleCall_1_0());
			}
			kw='['
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getVariablesAccess().getLeftSquareBracketKeyword_1_1());
			}
			this_BODY_8=RULE_BODY
			{
				$current.merge(this_BODY_8);
			}
			{
				newLeafNode(this_BODY_8, grammarAccess.getVariablesAccess().getBODYTerminalRuleCall_1_2());
			}
			kw=']'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getVariablesAccess().getRightSquareBracketKeyword_1_3());
			}
		)
	)
;

// Entry rule entryRuleconditions
entryRuleconditions returns [String current=null]:
	{ newCompositeNode(grammarAccess.getConditionsRule()); }
	iv_ruleconditions=ruleconditions
	{ $current=$iv_ruleconditions.current.getText(); }
	EOF;

// Rule conditions
ruleconditions returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		kw='&lt;'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getConditionsAccess().getLtKeyword_0());
		}
		    |
		kw='&le;'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getConditionsAccess().getLeKeyword_1());
		}
		    |
		kw='&ge;'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getConditionsAccess().getGeKeyword_2());
		}
		    |
		kw='&gt;'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getConditionsAccess().getGtKeyword_3());
		}
		    |
		kw='='
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getConditionsAccess().getEqualsSignKeyword_4());
		}
		    |
		kw='&amp;'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getConditionsAccess().getAmpKeyword_5());
		}
		    |
		kw='||'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getConditionsAccess().getVerticalLineVerticalLineKeyword_6());
		}
		    |
		kw=')'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getConditionsAccess().getRightParenthesisKeyword_7());
		}
		    |
		kw='!='
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getConditionsAccess().getExclamationMarkEqualsSignKeyword_8());
		}
	)
;

// Entry rule entryRulepreconditions
entryRulepreconditions returns [String current=null]:
	{ newCompositeNode(grammarAccess.getPreconditionsRule()); }
	iv_rulepreconditions=rulepreconditions
	{ $current=$iv_rulepreconditions.current.getText(); }
	EOF;

// Rule preconditions
rulepreconditions returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		kw='!'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getPreconditionsAccess().getExclamationMarkKeyword_0());
		}
		    |
		kw='('
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getPreconditionsAccess().getLeftParenthesisKeyword_1());
		}
	)
;

// Entry rule entryRulecodex
entryRulecodex returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCodexRule()); }
	iv_rulecodex=rulecodex
	{ $current=$iv_rulecodex.current; }
	EOF;

// Rule codex
rulecodex returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getCodexAccess().getDevice_codeDeviceParserRuleCall_0_0());
				}
				lv_device_code_0_0=ruledevice
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getCodexRule());
					}
					add(
						$current,
						"device_code",
						lv_device_code_0_0,
						"org.xtext.BPMN_translator.device");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getCodexAccess().getProtocolProtocolParserRuleCall_1_0());
				}
				lv_protocol_1_0=ruleprotocol
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getCodexRule());
					}
					add(
						$current,
						"protocol",
						lv_protocol_1_0,
						"org.xtext.BPMN_translator.protocol");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			(
				{
					newCompositeNode(grammarAccess.getCodexAccess().getSensor_codeSensorParserRuleCall_2_0());
				}
				lv_sensor_code_2_0=rulesensor
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getCodexRule());
					}
					add(
						$current,
						"sensor_code",
						lv_sensor_code_2_0,
						"org.xtext.BPMN_translator.sensor");
					afterParserOrEnumRuleCall();
				}
			)
		)*
	)
;

// Entry rule entryRuledevice
entryRuledevice returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDeviceRule()); }
	iv_ruledevice=ruledevice
	{ $current=$iv_ruledevice.current; }
	EOF;

// Rule device
ruledevice returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='DEVICE'
		{
			newLeafNode(otherlv_0, grammarAccess.getDeviceAccess().getDEVICEKeyword_0());
		}
		otherlv_1=':'
		{
			newLeafNode(otherlv_1, grammarAccess.getDeviceAccess().getColonKeyword_1());
		}
		(
			(
				lv_device_2_0=RULE_STRING
				{
					newLeafNode(lv_device_2_0, grammarAccess.getDeviceAccess().getDeviceSTRINGTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDeviceRule());
					}
					addWithLastConsumed(
						$current,
						"device",
						lv_device_2_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		otherlv_3='NAMEID'
		{
			newLeafNode(otherlv_3, grammarAccess.getDeviceAccess().getNAMEIDKeyword_3());
		}
		otherlv_4=':'
		{
			newLeafNode(otherlv_4, grammarAccess.getDeviceAccess().getColonKeyword_4());
		}
		(
			(
				lv_id_5_0=RULE_STRING
				{
					newLeafNode(lv_id_5_0, grammarAccess.getDeviceAccess().getIdSTRINGTerminalRuleCall_5_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDeviceRule());
					}
					addWithLastConsumed(
						$current,
						"id",
						lv_id_5_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
	)
;

// Entry rule entryRuleprotocol
entryRuleprotocol returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getProtocolRule()); }
	iv_ruleprotocol=ruleprotocol
	{ $current=$iv_ruleprotocol.current; }
	EOF;

// Rule protocol
ruleprotocol returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				(
					lv_pname_0_0='MQTT'
					{
						newLeafNode(lv_pname_0_0, grammarAccess.getProtocolAccess().getPnameMQTTKeyword_0_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getProtocolRule());
						}
						addWithLastConsumed($current, "pname", lv_pname_0_0, "MQTT");
					}
				)
			)
			otherlv_1='{'
			{
				newLeafNode(otherlv_1, grammarAccess.getProtocolAccess().getLeftCurlyBracketKeyword_0_1());
			}
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getProtocolAccess().getMqtt_dataMqtt_dataParserRuleCall_0_2_0_0());
						}
						lv_mqtt_data_2_0=rulemqtt_data
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getProtocolRule());
							}
							add(
								$current,
								"mqtt_data",
								lv_mqtt_data_2_0,
								"org.xtext.BPMN_translator.mqtt_data");
							afterParserOrEnumRuleCall();
						}
					)
				)
				(
					(
						{
							newCompositeNode(grammarAccess.getProtocolAccess().getMqtt_deviceMqtt_deviceParserRuleCall_0_2_1_0());
						}
						lv_mqtt_device_3_0=rulemqtt_device
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getProtocolRule());
							}
							add(
								$current,
								"mqtt_device",
								lv_mqtt_device_3_0,
								"org.xtext.BPMN_translator.mqtt_device");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
			otherlv_4='}'
			{
				newLeafNode(otherlv_4, grammarAccess.getProtocolAccess().getRightCurlyBracketKeyword_0_3());
			}
		)
		    |
		(
			(
				(
					lv_pname_5_0='HTTP'
					{
						newLeafNode(lv_pname_5_0, grammarAccess.getProtocolAccess().getPnameHTTPKeyword_1_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getProtocolRule());
						}
						addWithLastConsumed($current, "pname", lv_pname_5_0, "HTTP");
					}
				)
			)
			otherlv_6='{'
			{
				newLeafNode(otherlv_6, grammarAccess.getProtocolAccess().getLeftCurlyBracketKeyword_1_1());
			}
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getProtocolAccess().getHttp_dataHttp_dataParserRuleCall_1_2_0_0());
						}
						lv_http_data_7_0=rulehttp_data
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getProtocolRule());
							}
							add(
								$current,
								"http_data",
								lv_http_data_7_0,
								"org.xtext.BPMN_translator.http_data");
							afterParserOrEnumRuleCall();
						}
					)
				)
				(
					(
						{
							newCompositeNode(grammarAccess.getProtocolAccess().getMqtt_deviceMqtt_deviceParserRuleCall_1_2_1_0());
						}
						lv_mqtt_device_8_0=rulemqtt_device
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getProtocolRule());
							}
							add(
								$current,
								"mqtt_device",
								lv_mqtt_device_8_0,
								"org.xtext.BPMN_translator.mqtt_device");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
			otherlv_9='}'
			{
				newLeafNode(otherlv_9, grammarAccess.getProtocolAccess().getRightCurlyBracketKeyword_1_3());
			}
		)
	)
;

// Entry rule entryRulehttp_data
entryRulehttp_data returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getHttp_dataRule()); }
	iv_rulehttp_data=rulehttp_data
	{ $current=$iv_rulehttp_data.current; }
	EOF;

// Rule http_data
rulehttp_data returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getHttp_dataAccess().getHttp_dataAction_0(),
					$current);
			}
		)
		(
			(
				otherlv_1='NAME'
				{
					newLeafNode(otherlv_1, grammarAccess.getHttp_dataAccess().getNAMEKeyword_1_0_0());
				}
				otherlv_2='='
				{
					newLeafNode(otherlv_2, grammarAccess.getHttp_dataAccess().getEqualsSignKeyword_1_0_1());
				}
				(
					(
						lv_pname_3_0=RULE_STRING
						{
							newLeafNode(lv_pname_3_0, grammarAccess.getHttp_dataAccess().getPnameSTRINGTerminalRuleCall_1_0_2_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getHttp_dataRule());
							}
							addWithLastConsumed(
								$current,
								"pname",
								lv_pname_3_0,
								"org.eclipse.xtext.common.Terminals.STRING");
						}
					)
				)
			)
			    |
			(
				otherlv_4='SERVER_IP'
				{
					newLeafNode(otherlv_4, grammarAccess.getHttp_dataAccess().getSERVER_IPKeyword_1_1_0());
				}
				otherlv_5='='
				{
					newLeafNode(otherlv_5, grammarAccess.getHttp_dataAccess().getEqualsSignKeyword_1_1_1());
				}
				(
					(
						lv_server_ip_6_0=RULE_STRING
						{
							newLeafNode(lv_server_ip_6_0, grammarAccess.getHttp_dataAccess().getServer_ipSTRINGTerminalRuleCall_1_1_2_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getHttp_dataRule());
							}
							addWithLastConsumed(
								$current,
								"server_ip",
								lv_server_ip_6_0,
								"org.eclipse.xtext.common.Terminals.STRING");
						}
					)
				)
			)
			    |
			(
				otherlv_7='REQUEST_TYPE'
				{
					newLeafNode(otherlv_7, grammarAccess.getHttp_dataAccess().getREQUEST_TYPEKeyword_1_2_0());
				}
				otherlv_8='='
				{
					newLeafNode(otherlv_8, grammarAccess.getHttp_dataAccess().getEqualsSignKeyword_1_2_1());
				}
				(
					(
						lv_request_type_9_0=RULE_STRING
						{
							newLeafNode(lv_request_type_9_0, grammarAccess.getHttp_dataAccess().getRequest_typeSTRINGTerminalRuleCall_1_2_2_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getHttp_dataRule());
							}
							addWithLastConsumed(
								$current,
								"request_type",
								lv_request_type_9_0,
								"org.eclipse.xtext.common.Terminals.STRING");
						}
					)
				)
			)
			    |
			(
				otherlv_10='CONTENT_TYPE'
				{
					newLeafNode(otherlv_10, grammarAccess.getHttp_dataAccess().getCONTENT_TYPEKeyword_1_3_0());
				}
				otherlv_11='='
				{
					newLeafNode(otherlv_11, grammarAccess.getHttp_dataAccess().getEqualsSignKeyword_1_3_1());
				}
				(
					(
						lv_content_type_12_0=RULE_STRING
						{
							newLeafNode(lv_content_type_12_0, grammarAccess.getHttp_dataAccess().getContent_typeSTRINGTerminalRuleCall_1_3_2_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getHttp_dataRule());
							}
							addWithLastConsumed(
								$current,
								"content_type",
								lv_content_type_12_0,
								"org.eclipse.xtext.common.Terminals.STRING");
						}
					)
				)
			)
			    |
			(
				otherlv_13='HEADER'
				{
					newLeafNode(otherlv_13, grammarAccess.getHttp_dataAccess().getHEADERKeyword_1_4_0());
				}
				otherlv_14='='
				{
					newLeafNode(otherlv_14, grammarAccess.getHttp_dataAccess().getEqualsSignKeyword_1_4_1());
				}
				(
					(
						lv_header_15_0=RULE_STRING
						{
							newLeafNode(lv_header_15_0, grammarAccess.getHttp_dataAccess().getHeaderSTRINGTerminalRuleCall_1_4_2_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getHttp_dataRule());
							}
							addWithLastConsumed(
								$current,
								"header",
								lv_header_15_0,
								"org.eclipse.xtext.common.Terminals.STRING");
						}
					)
				)
			)
			    |
			(
				otherlv_16='DATA'
				{
					newLeafNode(otherlv_16, grammarAccess.getHttp_dataAccess().getDATAKeyword_1_5_0());
				}
				otherlv_17='='
				{
					newLeafNode(otherlv_17, grammarAccess.getHttp_dataAccess().getEqualsSignKeyword_1_5_1());
				}
				(
					(
						lv_data_18_0=RULE_STRING
						{
							newLeafNode(lv_data_18_0, grammarAccess.getHttp_dataAccess().getDataSTRINGTerminalRuleCall_1_5_2_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getHttp_dataRule());
							}
							addWithLastConsumed(
								$current,
								"data",
								lv_data_18_0,
								"org.eclipse.xtext.common.Terminals.STRING");
						}
					)
				)
			)
			    |
			(
				otherlv_19='NETWORK'
				{
					newLeafNode(otherlv_19, grammarAccess.getHttp_dataAccess().getNETWORKKeyword_1_6_0());
				}
				otherlv_20='{'
				{
					newLeafNode(otherlv_20, grammarAccess.getHttp_dataAccess().getLeftCurlyBracketKeyword_1_6_1());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getHttp_dataAccess().getMqtt_network_dataMqtt_network_dataParserRuleCall_1_6_2_0());
						}
						lv_mqtt_network_data_21_0=rulemqtt_network_data
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getHttp_dataRule());
							}
							add(
								$current,
								"mqtt_network_data",
								lv_mqtt_network_data_21_0,
								"org.xtext.BPMN_translator.mqtt_network_data");
							afterParserOrEnumRuleCall();
						}
					)
				)*
				otherlv_22='}'
				{
					newLeafNode(otherlv_22, grammarAccess.getHttp_dataAccess().getRightCurlyBracketKeyword_1_6_3());
				}
			)
		)*
	)
;

// Entry rule entryRulemqtt_data
entryRulemqtt_data returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMqtt_dataRule()); }
	iv_rulemqtt_data=rulemqtt_data
	{ $current=$iv_rulemqtt_data.current; }
	EOF;

// Rule mqtt_data
rulemqtt_data returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getMqtt_dataAccess().getMqtt_dataAction_0(),
					$current);
			}
		)
		(
			(
				otherlv_1='NAME'
				{
					newLeafNode(otherlv_1, grammarAccess.getMqtt_dataAccess().getNAMEKeyword_1_0_0());
				}
				otherlv_2='='
				{
					newLeafNode(otherlv_2, grammarAccess.getMqtt_dataAccess().getEqualsSignKeyword_1_0_1());
				}
				(
					(
						lv_pname_3_0=RULE_STRING
						{
							newLeafNode(lv_pname_3_0, grammarAccess.getMqtt_dataAccess().getPnameSTRINGTerminalRuleCall_1_0_2_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getMqtt_dataRule());
							}
							addWithLastConsumed(
								$current,
								"pname",
								lv_pname_3_0,
								"org.eclipse.xtext.common.Terminals.STRING");
						}
					)
				)
			)
			    |
			(
				otherlv_4='BROKER_USER'
				{
					newLeafNode(otherlv_4, grammarAccess.getMqtt_dataAccess().getBROKER_USERKeyword_1_1_0());
				}
				otherlv_5='='
				{
					newLeafNode(otherlv_5, grammarAccess.getMqtt_dataAccess().getEqualsSignKeyword_1_1_1());
				}
				(
					(
						lv_broker_user_6_0=RULE_STRING
						{
							newLeafNode(lv_broker_user_6_0, grammarAccess.getMqtt_dataAccess().getBroker_userSTRINGTerminalRuleCall_1_1_2_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getMqtt_dataRule());
							}
							addWithLastConsumed(
								$current,
								"broker_user",
								lv_broker_user_6_0,
								"org.eclipse.xtext.common.Terminals.STRING");
						}
					)
				)
			)
			    |
			(
				otherlv_7='BROKER_PASSWORD'
				{
					newLeafNode(otherlv_7, grammarAccess.getMqtt_dataAccess().getBROKER_PASSWORDKeyword_1_2_0());
				}
				otherlv_8='='
				{
					newLeafNode(otherlv_8, grammarAccess.getMqtt_dataAccess().getEqualsSignKeyword_1_2_1());
				}
				(
					(
						lv_broker_password_9_0=RULE_STRING
						{
							newLeafNode(lv_broker_password_9_0, grammarAccess.getMqtt_dataAccess().getBroker_passwordSTRINGTerminalRuleCall_1_2_2_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getMqtt_dataRule());
							}
							addWithLastConsumed(
								$current,
								"broker_password",
								lv_broker_password_9_0,
								"org.eclipse.xtext.common.Terminals.STRING");
						}
					)
				)
			)
			    |
			(
				otherlv_10='BROKER'
				{
					newLeafNode(otherlv_10, grammarAccess.getMqtt_dataAccess().getBROKERKeyword_1_3_0());
				}
				otherlv_11='='
				{
					newLeafNode(otherlv_11, grammarAccess.getMqtt_dataAccess().getEqualsSignKeyword_1_3_1());
				}
				(
					(
						lv_broker_12_0=RULE_STRING
						{
							newLeafNode(lv_broker_12_0, grammarAccess.getMqtt_dataAccess().getBrokerSTRINGTerminalRuleCall_1_3_2_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getMqtt_dataRule());
							}
							addWithLastConsumed(
								$current,
								"broker",
								lv_broker_12_0,
								"org.eclipse.xtext.common.Terminals.STRING");
						}
					)
				)
			)
			    |
			(
				otherlv_13='NETWORK'
				{
					newLeafNode(otherlv_13, grammarAccess.getMqtt_dataAccess().getNETWORKKeyword_1_4_0());
				}
				otherlv_14='{'
				{
					newLeafNode(otherlv_14, grammarAccess.getMqtt_dataAccess().getLeftCurlyBracketKeyword_1_4_1());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getMqtt_dataAccess().getMqtt_network_dataMqtt_network_dataParserRuleCall_1_4_2_0());
						}
						lv_mqtt_network_data_15_0=rulemqtt_network_data
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getMqtt_dataRule());
							}
							add(
								$current,
								"mqtt_network_data",
								lv_mqtt_network_data_15_0,
								"org.xtext.BPMN_translator.mqtt_network_data");
							afterParserOrEnumRuleCall();
						}
					)
				)*
				otherlv_16='}'
				{
					newLeafNode(otherlv_16, grammarAccess.getMqtt_dataAccess().getRightCurlyBracketKeyword_1_4_3());
				}
			)
			    |
			(
				otherlv_17='SUBTOPICS'
				{
					newLeafNode(otherlv_17, grammarAccess.getMqtt_dataAccess().getSUBTOPICSKeyword_1_5_0());
				}
				otherlv_18='{'
				{
					newLeafNode(otherlv_18, grammarAccess.getMqtt_dataAccess().getLeftCurlyBracketKeyword_1_5_1());
				}
				(
					otherlv_19='TOPIC_NAME'
					{
						newLeafNode(otherlv_19, grammarAccess.getMqtt_dataAccess().getTOPIC_NAMEKeyword_1_5_2_0());
					}
					otherlv_20='='
					{
						newLeafNode(otherlv_20, grammarAccess.getMqtt_dataAccess().getEqualsSignKeyword_1_5_2_1());
					}
					(
						(
							lv_subtopics_21_0=RULE_STRING
							{
								newLeafNode(lv_subtopics_21_0, grammarAccess.getMqtt_dataAccess().getSubtopicsSTRINGTerminalRuleCall_1_5_2_2_0());
							}
							{
								if ($current==null) {
									$current = createModelElement(grammarAccess.getMqtt_dataRule());
								}
								addWithLastConsumed(
									$current,
									"subtopics",
									lv_subtopics_21_0,
									"org.eclipse.xtext.common.Terminals.STRING");
							}
						)
					)
				)*
				otherlv_22='}'
				{
					newLeafNode(otherlv_22, grammarAccess.getMqtt_dataAccess().getRightCurlyBracketKeyword_1_5_3());
				}
			)
			    |
			(
				otherlv_23='PUBTOPICS'
				{
					newLeafNode(otherlv_23, grammarAccess.getMqtt_dataAccess().getPUBTOPICSKeyword_1_6_0());
				}
				otherlv_24='{'
				{
					newLeafNode(otherlv_24, grammarAccess.getMqtt_dataAccess().getLeftCurlyBracketKeyword_1_6_1());
				}
				(
					(
						otherlv_25='TOPIC_NAME'
						{
							newLeafNode(otherlv_25, grammarAccess.getMqtt_dataAccess().getTOPIC_NAMEKeyword_1_6_2_0_0());
						}
						otherlv_26='='
						{
							newLeafNode(otherlv_26, grammarAccess.getMqtt_dataAccess().getEqualsSignKeyword_1_6_2_0_1());
						}
						(
							(
								lv_pubtopics_27_0=RULE_STRING
								{
									newLeafNode(lv_pubtopics_27_0, grammarAccess.getMqtt_dataAccess().getPubtopicsSTRINGTerminalRuleCall_1_6_2_0_2_0());
								}
								{
									if ($current==null) {
										$current = createModelElement(grammarAccess.getMqtt_dataRule());
									}
									addWithLastConsumed(
										$current,
										"pubtopics",
										lv_pubtopics_27_0,
										"org.eclipse.xtext.common.Terminals.STRING");
								}
							)
						)*
					)
					    |
					(
						otherlv_28='DATA'
						{
							newLeafNode(otherlv_28, grammarAccess.getMqtt_dataAccess().getDATAKeyword_1_6_2_1_0());
						}
						otherlv_29='='
						{
							newLeafNode(otherlv_29, grammarAccess.getMqtt_dataAccess().getEqualsSignKeyword_1_6_2_1_1());
						}
						(
							(
								lv_value_30_0=RULE_STRING
								{
									newLeafNode(lv_value_30_0, grammarAccess.getMqtt_dataAccess().getValueSTRINGTerminalRuleCall_1_6_2_1_2_0());
								}
								{
									if ($current==null) {
										$current = createModelElement(grammarAccess.getMqtt_dataRule());
									}
									addWithLastConsumed(
										$current,
										"value",
										lv_value_30_0,
										"org.eclipse.xtext.common.Terminals.STRING");
								}
							)
						)
					)
				)*
				otherlv_31='}'
				{
					newLeafNode(otherlv_31, grammarAccess.getMqtt_dataAccess().getRightCurlyBracketKeyword_1_6_3());
				}
			)
		)*
	)
;

// Entry rule entryRulemqtt_network_data
entryRulemqtt_network_data returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMqtt_network_dataRule()); }
	iv_rulemqtt_network_data=rulemqtt_network_data
	{ $current=$iv_rulemqtt_network_data.current; }
	EOF;

// Rule mqtt_network_data
rulemqtt_network_data returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='SSID'
		{
			newLeafNode(otherlv_0, grammarAccess.getMqtt_network_dataAccess().getSSIDKeyword_0());
		}
		otherlv_1='='
		{
			newLeafNode(otherlv_1, grammarAccess.getMqtt_network_dataAccess().getEqualsSignKeyword_1());
		}
		(
			(
				lv_ssid_2_0=RULE_STRING
				{
					newLeafNode(lv_ssid_2_0, grammarAccess.getMqtt_network_dataAccess().getSsidSTRINGTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getMqtt_network_dataRule());
					}
					addWithLastConsumed(
						$current,
						"ssid",
						lv_ssid_2_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		otherlv_3='PASSWORD'
		{
			newLeafNode(otherlv_3, grammarAccess.getMqtt_network_dataAccess().getPASSWORDKeyword_3());
		}
		otherlv_4='='
		{
			newLeafNode(otherlv_4, grammarAccess.getMqtt_network_dataAccess().getEqualsSignKeyword_4());
		}
		(
			(
				lv_password_5_0=RULE_STRING
				{
					newLeafNode(lv_password_5_0, grammarAccess.getMqtt_network_dataAccess().getPasswordSTRINGTerminalRuleCall_5_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getMqtt_network_dataRule());
					}
					addWithLastConsumed(
						$current,
						"password",
						lv_password_5_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
	)
;

// Entry rule entryRulemqtt_device
entryRulemqtt_device returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMqtt_deviceRule()); }
	iv_rulemqtt_device=rulemqtt_device
	{ $current=$iv_rulemqtt_device.current; }
	EOF;

// Rule mqtt_device
rulemqtt_device returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='PROTOCOL_DEVICE'
		{
			newLeafNode(otherlv_0, grammarAccess.getMqtt_deviceAccess().getPROTOCOL_DEVICEKeyword_0());
		}
		otherlv_1='{'
		{
			newLeafNode(otherlv_1, grammarAccess.getMqtt_deviceAccess().getLeftCurlyBracketKeyword_1());
		}
		otherlv_2='NAME'
		{
			newLeafNode(otherlv_2, grammarAccess.getMqtt_deviceAccess().getNAMEKeyword_2());
		}
		otherlv_3='='
		{
			newLeafNode(otherlv_3, grammarAccess.getMqtt_deviceAccess().getEqualsSignKeyword_3());
		}
		(
			(
				lv_dname_4_0=RULE_STRING
				{
					newLeafNode(lv_dname_4_0, grammarAccess.getMqtt_deviceAccess().getDnameSTRINGTerminalRuleCall_4_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getMqtt_deviceRule());
					}
					addWithLastConsumed(
						$current,
						"dname",
						lv_dname_4_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		otherlv_5='}'
		{
			newLeafNode(otherlv_5, grammarAccess.getMqtt_deviceAccess().getRightCurlyBracketKeyword_5());
		}
	)
;

// Entry rule entryRulesensor
entryRulesensor returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSensorRule()); }
	iv_rulesensor=rulesensor
	{ $current=$iv_rulesensor.current; }
	EOF;

// Rule sensor
rulesensor returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				(
					lv_sname_0_0='TEMPERATURE'
					{
						newLeafNode(lv_sname_0_0, grammarAccess.getSensorAccess().getSnameTEMPERATUREKeyword_0_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getSensorRule());
						}
						addWithLastConsumed($current, "sname", lv_sname_0_0, "TEMPERATURE");
					}
				)
			)
			otherlv_1='{'
			{
				newLeafNode(otherlv_1, grammarAccess.getSensorAccess().getLeftCurlyBracketKeyword_0_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getSensorAccess().getSensorSensor_dataParserRuleCall_0_2_0());
					}
					lv_sensor_2_0=rulesensor_data
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getSensorRule());
						}
						add(
							$current,
							"sensor",
							lv_sensor_2_0,
							"org.xtext.BPMN_translator.sensor_data");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_3='}'
			{
				newLeafNode(otherlv_3, grammarAccess.getSensorAccess().getRightCurlyBracketKeyword_0_3());
			}
		)
		    |
		(
			(
				(
					lv_sname_4_0='DISTANCE'
					{
						newLeafNode(lv_sname_4_0, grammarAccess.getSensorAccess().getSnameDISTANCEKeyword_1_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getSensorRule());
						}
						addWithLastConsumed($current, "sname", lv_sname_4_0, "DISTANCE");
					}
				)
			)
			otherlv_5='{'
			{
				newLeafNode(otherlv_5, grammarAccess.getSensorAccess().getLeftCurlyBracketKeyword_1_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getSensorAccess().getSensorSensor_dataParserRuleCall_1_2_0());
					}
					lv_sensor_6_0=rulesensor_data
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getSensorRule());
						}
						add(
							$current,
							"sensor",
							lv_sensor_6_0,
							"org.xtext.BPMN_translator.sensor_data");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_7='}'
			{
				newLeafNode(otherlv_7, grammarAccess.getSensorAccess().getRightCurlyBracketKeyword_1_3());
			}
		)
	)
;

// Entry rule entryRulesensor_data
entryRulesensor_data returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSensor_dataRule()); }
	iv_rulesensor_data=rulesensor_data
	{ $current=$iv_rulesensor_data.current; }
	EOF;

// Rule sensor_data
rulesensor_data returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getSensor_dataAccess().getSensor_dataAction_0(),
					$current);
			}
		)
		(
			(
				otherlv_1='NAME'
				{
					newLeafNode(otherlv_1, grammarAccess.getSensor_dataAccess().getNAMEKeyword_1_0_0());
				}
				otherlv_2='='
				{
					newLeafNode(otherlv_2, grammarAccess.getSensor_dataAccess().getEqualsSignKeyword_1_0_1());
				}
				(
					(
						lv_pname_3_0=RULE_STRING
						{
							newLeafNode(lv_pname_3_0, grammarAccess.getSensor_dataAccess().getPnameSTRINGTerminalRuleCall_1_0_2_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getSensor_dataRule());
							}
							addWithLastConsumed(
								$current,
								"pname",
								lv_pname_3_0,
								"org.eclipse.xtext.common.Terminals.STRING");
						}
					)
				)
			)
			    |
			(
				otherlv_4='PINS'
				{
					newLeafNode(otherlv_4, grammarAccess.getSensor_dataAccess().getPINSKeyword_1_1_0());
				}
				otherlv_5='='
				{
					newLeafNode(otherlv_5, grammarAccess.getSensor_dataAccess().getEqualsSignKeyword_1_1_1());
				}
				(
					(
						lv_pins_6_0=RULE_STRING
						{
							newLeafNode(lv_pins_6_0, grammarAccess.getSensor_dataAccess().getPinsSTRINGTerminalRuleCall_1_1_2_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getSensor_dataRule());
							}
							addWithLastConsumed(
								$current,
								"pins",
								lv_pins_6_0,
								"org.eclipse.xtext.common.Terminals.STRING");
						}
					)
				)
			)
			    |
			(
				otherlv_7='SENSOR_ID'
				{
					newLeafNode(otherlv_7, grammarAccess.getSensor_dataAccess().getSENSOR_IDKeyword_1_2_0());
				}
				otherlv_8='='
				{
					newLeafNode(otherlv_8, grammarAccess.getSensor_dataAccess().getEqualsSignKeyword_1_2_1());
				}
				(
					(
						lv_sensor_id_9_0=RULE_STRING
						{
							newLeafNode(lv_sensor_id_9_0, grammarAccess.getSensor_dataAccess().getSensor_idSTRINGTerminalRuleCall_1_2_2_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getSensor_dataRule());
							}
							addWithLastConsumed(
								$current,
								"sensor_id",
								lv_sensor_id_9_0,
								"org.eclipse.xtext.common.Terminals.STRING");
						}
					)
				)
			)
		)*
	)
;

RULE_HEAD : ('bpmn'|'bpmndi'|'camunda'|'xsi'|'xml'|'xmlns'|'dc'|'di');

RULE_KEYWORDS : ('id'|'name'|'isExecutable'|'sourceRef'|'processRef'|'targetRef'|'calledElement'|'type'|'expression'|'value'|'resultVariable'|'asyncBefore'|'intermediateThrowEvent'|'class'|'event'|'startEvent'|'task'|'messageEventDefinition'|'sequenceFlow'|'isExpanded'|'condition'|'association'|'outgoing'|'serviceTask'|'process'|'standardLoopCharacteristics'|'incoming'|'intermediateCatchEvent'|'conditionalEventDefinition'|'isMarkerVisible'|'terminateEventDefinition'|'endEvent'|'textAnnotation'|'text'|'dataStoreReference'|'bpmnElement'|'dataObjectReference'|'callActivity'|'laneSet'|'lane'|'flowNodeRef'|'definitions'|'userTask'|'documentation'|'dataOutputAssociation'|'exclusiveGateway'|'waypoint'|'BPMNLabel'|'diagramRelationId'|'extensionElements'|'inputOutput'|'list'|'inputParameter'|'height'|'messageFlow'|'dataObjectRef'|'outputParameter'|'properties'|'property'|'BPMNShape'|'Bounds'|'subProcess'|'cancelActivity'|'field'|'string'|'scriptTask'|'script'|'BPMNPlane'|'BPMNEdge'|'sendTask'|'boundaryEvent'|'executionListener'|'timerEventDefinition'|'timeDuration'|'width'|'dataInputAssociation'|'parallelGateway'|'collaboration'|'participant'|'targetNamespace'|'dataObject'|'signalEventDefinition'|'BPMNDiagram'|'exporter'|'exporterVersion'|'x'|'y'|'isHorizontal'|'attachedToRef'|'conditionExpression'|'receiveTask'|'messageRef'|'initiator'|'message'|'inclusiveGateway');

RULE_BODY : ('a'..'z'|'A'..'Z'|'\u00E8'|'\u00F2'|RULE_INT|'_')*;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

fragment RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
