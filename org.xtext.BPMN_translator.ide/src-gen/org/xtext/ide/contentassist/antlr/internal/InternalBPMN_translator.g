/*
 * generated by Xtext 2.23.0
 */
grammar InternalBPMN_translator;

options {
	superClass=AbstractInternalContentAssistParser;
}

@lexer::header {
package org.xtext.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package org.xtext.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import org.xtext.services.BPMN_translatorGrammarAccess;

}
@parser::members {
	private BPMN_translatorGrammarAccess grammarAccess;

	public void setGrammarAccess(BPMN_translatorGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleModel
entryRuleModel
:
{ before(grammarAccess.getModelRule()); }
	 ruleModel
{ after(grammarAccess.getModelRule()); } 
	 EOF 
;

// Rule Model
ruleModel 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getModelAccess().getModelAssignment()); }
		(rule__Model__ModelAssignment)
		{ after(grammarAccess.getModelAccess().getModelAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleXml
entryRuleXml
:
{ before(grammarAccess.getXmlRule()); }
	 ruleXml
{ after(grammarAccess.getXmlRule()); } 
	 EOF 
;

// Rule Xml
ruleXml 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getXmlAccess().getGroup()); }
		(rule__Xml__Group__0)
		{ after(grammarAccess.getXmlAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleOpening
entryRuleOpening
:
{ before(grammarAccess.getOpeningRule()); }
	 ruleOpening
{ after(grammarAccess.getOpeningRule()); } 
	 EOF 
;

// Rule Opening
ruleOpening 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getOpeningAccess().getAlternatives()); }
		(rule__Opening__Alternatives)
		{ after(grammarAccess.getOpeningAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleData
entryRuleData
:
{ before(grammarAccess.getDataRule()); }
	 ruleData
{ after(grammarAccess.getDataRule()); } 
	 EOF 
;

// Rule Data
ruleData 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDataAccess().getAlternatives()); }
		(rule__Data__Alternatives)
		{ after(grammarAccess.getDataAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleOpen
entryRuleOpen
:
{ before(grammarAccess.getOpenRule()); }
	 ruleOpen
{ after(grammarAccess.getOpenRule()); } 
	 EOF 
;

// Rule Open
ruleOpen 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getOpenAccess().getGroup()); }
		(rule__Open__Group__0)
		{ after(grammarAccess.getOpenAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleClose
entryRuleClose
:
{ before(grammarAccess.getCloseRule()); }
	 ruleClose
{ after(grammarAccess.getCloseRule()); } 
	 EOF 
;

// Rule Close
ruleClose 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCloseAccess().getGroup()); }
		(rule__Close__Group__0)
		{ after(grammarAccess.getCloseAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Opening__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOpeningAccess().getGroup_0()); }
		(rule__Opening__Group_0__0)
		{ after(grammarAccess.getOpeningAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getOpeningAccess().getGroup_1()); }
		(rule__Opening__Group_1__0)
		{ after(grammarAccess.getOpeningAccess().getGroup_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Opening__Alternatives_0_1_2_0_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOpeningAccess().getGroup_0_1_2_0_4_0()); }
		(rule__Opening__Group_0_1_2_0_4_0__0)
		{ after(grammarAccess.getOpeningAccess().getGroup_0_1_2_0_4_0()); }
	)
	|
	(
		{ before(grammarAccess.getOpeningAccess().getGroup_0_1_2_0_4_1()); }
		(rule__Opening__Group_0_1_2_0_4_1__0)
		{ after(grammarAccess.getOpeningAccess().getGroup_0_1_2_0_4_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Opening__Alternatives_1_1_0_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOpeningAccess().getGroup_1_1_0_4_0()); }
		(rule__Opening__Group_1_1_0_4_0__0)
		{ after(grammarAccess.getOpeningAccess().getGroup_1_1_0_4_0()); }
	)
	|
	(
		{ before(grammarAccess.getOpeningAccess().getGroup_1_1_0_4_1()); }
		(rule__Opening__Group_1_1_0_4_1__0)
		{ after(grammarAccess.getOpeningAccess().getGroup_1_1_0_4_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Data__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDataAccess().getBODYTerminalRuleCall_0()); }
		RULE_BODY
		{ after(grammarAccess.getDataAccess().getBODYTerminalRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getDataAccess().getKEYWORDSTerminalRuleCall_1()); }
		RULE_KEYWORDS
		{ after(grammarAccess.getDataAccess().getKEYWORDSTerminalRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getDataAccess().getSTRINGTerminalRuleCall_2()); }
		RULE_STRING
		{ after(grammarAccess.getDataAccess().getSTRINGTerminalRuleCall_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Open__Alternatives_1_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOpenAccess().getGroup_1_4_0()); }
		(rule__Open__Group_1_4_0__0)
		{ after(grammarAccess.getOpenAccess().getGroup_1_4_0()); }
	)
	|
	(
		{ before(grammarAccess.getOpenAccess().getGroup_1_4_1()); }
		(rule__Open__Group_1_4_1__0)
		{ after(grammarAccess.getOpenAccess().getGroup_1_4_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Open__Alternatives_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOpenAccess().getDataParserRuleCall_2_0()); }
		ruleData
		{ after(grammarAccess.getOpenAccess().getDataParserRuleCall_2_0()); }
	)
	|
	(
		{ before(grammarAccess.getOpenAccess().getProvaAssignment_2_1()); }
		(rule__Open__ProvaAssignment_2_1)
		{ after(grammarAccess.getOpenAccess().getProvaAssignment_2_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Xml__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Xml__Group__0__Impl
	rule__Xml__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Xml__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getXmlAccess().getXmlAction_0()); }
	()
	{ after(grammarAccess.getXmlAccess().getXmlAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Xml__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Xml__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Xml__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getXmlAccess().getOpening_tagAssignment_1()); }
	(rule__Xml__Opening_tagAssignment_1)
	{ after(grammarAccess.getXmlAccess().getOpening_tagAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Opening__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Opening__Group_0__0__Impl
	rule__Opening__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Opening__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOpeningAccess().getOpeningAction_0_0()); }
	()
	{ after(grammarAccess.getOpeningAccess().getOpeningAction_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Opening__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Opening__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Opening__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOpeningAccess().getGroup_0_1()); }
	(rule__Opening__Group_0_1__0)
	{ after(grammarAccess.getOpeningAccess().getGroup_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Opening__Group_0_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Opening__Group_0_1__0__Impl
	rule__Opening__Group_0_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Opening__Group_0_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOpeningAccess().getGroup_0_1_0()); }
	(rule__Opening__Group_0_1_0__0)
	{ after(grammarAccess.getOpeningAccess().getGroup_0_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Opening__Group_0_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Opening__Group_0_1__1__Impl
	rule__Opening__Group_0_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Opening__Group_0_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOpeningAccess().getGroup_0_1_1()); }
	(rule__Opening__Group_0_1_1__0)*
	{ after(grammarAccess.getOpeningAccess().getGroup_0_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Opening__Group_0_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Opening__Group_0_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Opening__Group_0_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOpeningAccess().getGroup_0_1_2()); }
	(rule__Opening__Group_0_1_2__0)*
	{ after(grammarAccess.getOpeningAccess().getGroup_0_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Opening__Group_0_1_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Opening__Group_0_1_0__0__Impl
	rule__Opening__Group_0_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Opening__Group_0_1_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOpeningAccess().getProvaAssignment_0_1_0_0()); }
	(rule__Opening__ProvaAssignment_0_1_0_0)
	{ after(grammarAccess.getOpeningAccess().getProvaAssignment_0_1_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Opening__Group_0_1_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Opening__Group_0_1_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Opening__Group_0_1_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOpeningAccess().getProva1Assignment_0_1_0_1()); }
	(rule__Opening__Prova1Assignment_0_1_0_1)
	{ after(grammarAccess.getOpeningAccess().getProva1Assignment_0_1_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Opening__Group_0_1_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Opening__Group_0_1_1__0__Impl
	rule__Opening__Group_0_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Opening__Group_0_1_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOpeningAccess().getProvaAssignment_0_1_1_0()); }
	(rule__Opening__ProvaAssignment_0_1_1_0)
	{ after(grammarAccess.getOpeningAccess().getProvaAssignment_0_1_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Opening__Group_0_1_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Opening__Group_0_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Opening__Group_0_1_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOpeningAccess().getProva1Assignment_0_1_1_1()); }
	(rule__Opening__Prova1Assignment_0_1_1_1)
	{ after(grammarAccess.getOpeningAccess().getProva1Assignment_0_1_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Opening__Group_0_1_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Opening__Group_0_1_2__0__Impl
	rule__Opening__Group_0_1_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Opening__Group_0_1_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOpeningAccess().getGroup_0_1_2_0()); }
	(rule__Opening__Group_0_1_2_0__0)
	{ after(grammarAccess.getOpeningAccess().getGroup_0_1_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Opening__Group_0_1_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Opening__Group_0_1_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Opening__Group_0_1_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOpeningAccess().getSolidusGreaterThanSignKeyword_0_1_2_1()); }
	'/>'
	{ after(grammarAccess.getOpeningAccess().getSolidusGreaterThanSignKeyword_0_1_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Opening__Group_0_1_2_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Opening__Group_0_1_2_0__0__Impl
	rule__Opening__Group_0_1_2_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Opening__Group_0_1_2_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOpeningAccess().getLessThanSignKeyword_0_1_2_0_0()); }
	'<'
	{ after(grammarAccess.getOpeningAccess().getLessThanSignKeyword_0_1_2_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Opening__Group_0_1_2_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Opening__Group_0_1_2_0__1__Impl
	rule__Opening__Group_0_1_2_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Opening__Group_0_1_2_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOpeningAccess().getHEADTerminalRuleCall_0_1_2_0_1()); }
	RULE_HEAD
	{ after(grammarAccess.getOpeningAccess().getHEADTerminalRuleCall_0_1_2_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Opening__Group_0_1_2_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Opening__Group_0_1_2_0__2__Impl
	rule__Opening__Group_0_1_2_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Opening__Group_0_1_2_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOpeningAccess().getColonKeyword_0_1_2_0_2()); }
	':'
	{ after(grammarAccess.getOpeningAccess().getColonKeyword_0_1_2_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Opening__Group_0_1_2_0__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Opening__Group_0_1_2_0__3__Impl
	rule__Opening__Group_0_1_2_0__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Opening__Group_0_1_2_0__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOpeningAccess().getKEYWORDSTerminalRuleCall_0_1_2_0_3()); }
	RULE_KEYWORDS
	{ after(grammarAccess.getOpeningAccess().getKEYWORDSTerminalRuleCall_0_1_2_0_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Opening__Group_0_1_2_0__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Opening__Group_0_1_2_0__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Opening__Group_0_1_2_0__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOpeningAccess().getAlternatives_0_1_2_0_4()); }
	(rule__Opening__Alternatives_0_1_2_0_4)*
	{ after(grammarAccess.getOpeningAccess().getAlternatives_0_1_2_0_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Opening__Group_0_1_2_0_4_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Opening__Group_0_1_2_0_4_0__0__Impl
	rule__Opening__Group_0_1_2_0_4_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Opening__Group_0_1_2_0_4_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOpeningAccess().getHEADTerminalRuleCall_0_1_2_0_4_0_0()); }
	RULE_HEAD
	{ after(grammarAccess.getOpeningAccess().getHEADTerminalRuleCall_0_1_2_0_4_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Opening__Group_0_1_2_0_4_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Opening__Group_0_1_2_0_4_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Opening__Group_0_1_2_0_4_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOpeningAccess().getColonKeyword_0_1_2_0_4_0_1()); }
	':'
	{ after(grammarAccess.getOpeningAccess().getColonKeyword_0_1_2_0_4_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Opening__Group_0_1_2_0_4_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Opening__Group_0_1_2_0_4_1__0__Impl
	rule__Opening__Group_0_1_2_0_4_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Opening__Group_0_1_2_0_4_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOpeningAccess().getKEYWORDSTerminalRuleCall_0_1_2_0_4_1_0()); }
	RULE_KEYWORDS
	{ after(grammarAccess.getOpeningAccess().getKEYWORDSTerminalRuleCall_0_1_2_0_4_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Opening__Group_0_1_2_0_4_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Opening__Group_0_1_2_0_4_1__1__Impl
	rule__Opening__Group_0_1_2_0_4_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Opening__Group_0_1_2_0_4_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOpeningAccess().getEqualsSignKeyword_0_1_2_0_4_1_1()); }
	'='
	{ after(grammarAccess.getOpeningAccess().getEqualsSignKeyword_0_1_2_0_4_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Opening__Group_0_1_2_0_4_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Opening__Group_0_1_2_0_4_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Opening__Group_0_1_2_0_4_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOpeningAccess().getValueAssignment_0_1_2_0_4_1_2()); }
	(rule__Opening__ValueAssignment_0_1_2_0_4_1_2)
	{ after(grammarAccess.getOpeningAccess().getValueAssignment_0_1_2_0_4_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Opening__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Opening__Group_1__0__Impl
	rule__Opening__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Opening__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOpeningAccess().getOpeningAction_1_0()); }
	()
	{ after(grammarAccess.getOpeningAccess().getOpeningAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Opening__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Opening__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Opening__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOpeningAccess().getGroup_1_1()); }
	(rule__Opening__Group_1_1__0)*
	{ after(grammarAccess.getOpeningAccess().getGroup_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Opening__Group_1_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Opening__Group_1_1__0__Impl
	rule__Opening__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Opening__Group_1_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOpeningAccess().getGroup_1_1_0()); }
	(rule__Opening__Group_1_1_0__0)
	{ after(grammarAccess.getOpeningAccess().getGroup_1_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Opening__Group_1_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Opening__Group_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Opening__Group_1_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOpeningAccess().getSolidusGreaterThanSignKeyword_1_1_1()); }
	'/>'
	{ after(grammarAccess.getOpeningAccess().getSolidusGreaterThanSignKeyword_1_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Opening__Group_1_1_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Opening__Group_1_1_0__0__Impl
	rule__Opening__Group_1_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Opening__Group_1_1_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOpeningAccess().getLessThanSignKeyword_1_1_0_0()); }
	'<'
	{ after(grammarAccess.getOpeningAccess().getLessThanSignKeyword_1_1_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Opening__Group_1_1_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Opening__Group_1_1_0__1__Impl
	rule__Opening__Group_1_1_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Opening__Group_1_1_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOpeningAccess().getHEADTerminalRuleCall_1_1_0_1()); }
	RULE_HEAD
	{ after(grammarAccess.getOpeningAccess().getHEADTerminalRuleCall_1_1_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Opening__Group_1_1_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Opening__Group_1_1_0__2__Impl
	rule__Opening__Group_1_1_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Opening__Group_1_1_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOpeningAccess().getColonKeyword_1_1_0_2()); }
	':'
	{ after(grammarAccess.getOpeningAccess().getColonKeyword_1_1_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Opening__Group_1_1_0__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Opening__Group_1_1_0__3__Impl
	rule__Opening__Group_1_1_0__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Opening__Group_1_1_0__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOpeningAccess().getKEYWORDSTerminalRuleCall_1_1_0_3()); }
	RULE_KEYWORDS
	{ after(grammarAccess.getOpeningAccess().getKEYWORDSTerminalRuleCall_1_1_0_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Opening__Group_1_1_0__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Opening__Group_1_1_0__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Opening__Group_1_1_0__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOpeningAccess().getAlternatives_1_1_0_4()); }
	(rule__Opening__Alternatives_1_1_0_4)*
	{ after(grammarAccess.getOpeningAccess().getAlternatives_1_1_0_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Opening__Group_1_1_0_4_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Opening__Group_1_1_0_4_0__0__Impl
	rule__Opening__Group_1_1_0_4_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Opening__Group_1_1_0_4_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOpeningAccess().getHEADTerminalRuleCall_1_1_0_4_0_0()); }
	RULE_HEAD
	{ after(grammarAccess.getOpeningAccess().getHEADTerminalRuleCall_1_1_0_4_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Opening__Group_1_1_0_4_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Opening__Group_1_1_0_4_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Opening__Group_1_1_0_4_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOpeningAccess().getColonKeyword_1_1_0_4_0_1()); }
	':'
	{ after(grammarAccess.getOpeningAccess().getColonKeyword_1_1_0_4_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Opening__Group_1_1_0_4_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Opening__Group_1_1_0_4_1__0__Impl
	rule__Opening__Group_1_1_0_4_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Opening__Group_1_1_0_4_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOpeningAccess().getKEYWORDSTerminalRuleCall_1_1_0_4_1_0()); }
	RULE_KEYWORDS
	{ after(grammarAccess.getOpeningAccess().getKEYWORDSTerminalRuleCall_1_1_0_4_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Opening__Group_1_1_0_4_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Opening__Group_1_1_0_4_1__1__Impl
	rule__Opening__Group_1_1_0_4_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Opening__Group_1_1_0_4_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOpeningAccess().getEqualsSignKeyword_1_1_0_4_1_1()); }
	'='
	{ after(grammarAccess.getOpeningAccess().getEqualsSignKeyword_1_1_0_4_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Opening__Group_1_1_0_4_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Opening__Group_1_1_0_4_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Opening__Group_1_1_0_4_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOpeningAccess().getValueAssignment_1_1_0_4_1_2()); }
	(rule__Opening__ValueAssignment_1_1_0_4_1_2)
	{ after(grammarAccess.getOpeningAccess().getValueAssignment_1_1_0_4_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Open__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Open__Group__0__Impl
	rule__Open__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Open__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOpenAccess().getOpensAction_0()); }
	()
	{ after(grammarAccess.getOpenAccess().getOpensAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Open__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Open__Group__1__Impl
	rule__Open__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Open__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOpenAccess().getGroup_1()); }
	(rule__Open__Group_1__0)
	{ after(grammarAccess.getOpenAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Open__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Open__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Open__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOpenAccess().getAlternatives_2()); }
	(rule__Open__Alternatives_2)
	{ after(grammarAccess.getOpenAccess().getAlternatives_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Open__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Open__Group_1__0__Impl
	rule__Open__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Open__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOpenAccess().getLessThanSignKeyword_1_0()); }
	'<'
	{ after(grammarAccess.getOpenAccess().getLessThanSignKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Open__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Open__Group_1__1__Impl
	rule__Open__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Open__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOpenAccess().getHEADTerminalRuleCall_1_1()); }
	RULE_HEAD
	{ after(grammarAccess.getOpenAccess().getHEADTerminalRuleCall_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Open__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Open__Group_1__2__Impl
	rule__Open__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Open__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOpenAccess().getColonKeyword_1_2()); }
	':'
	{ after(grammarAccess.getOpenAccess().getColonKeyword_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Open__Group_1__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Open__Group_1__3__Impl
	rule__Open__Group_1__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Open__Group_1__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOpenAccess().getKEYWORDSTerminalRuleCall_1_3()); }
	RULE_KEYWORDS
	{ after(grammarAccess.getOpenAccess().getKEYWORDSTerminalRuleCall_1_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Open__Group_1__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Open__Group_1__4__Impl
	rule__Open__Group_1__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Open__Group_1__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOpenAccess().getAlternatives_1_4()); }
	(rule__Open__Alternatives_1_4)*
	{ after(grammarAccess.getOpenAccess().getAlternatives_1_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Open__Group_1__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Open__Group_1__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Open__Group_1__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOpenAccess().getGreaterThanSignKeyword_1_5()); }
	'>'
	{ after(grammarAccess.getOpenAccess().getGreaterThanSignKeyword_1_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Open__Group_1_4_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Open__Group_1_4_0__0__Impl
	rule__Open__Group_1_4_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Open__Group_1_4_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOpenAccess().getHEADTerminalRuleCall_1_4_0_0()); }
	RULE_HEAD
	{ after(grammarAccess.getOpenAccess().getHEADTerminalRuleCall_1_4_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Open__Group_1_4_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Open__Group_1_4_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Open__Group_1_4_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOpenAccess().getColonKeyword_1_4_0_1()); }
	':'
	{ after(grammarAccess.getOpenAccess().getColonKeyword_1_4_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Open__Group_1_4_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Open__Group_1_4_1__0__Impl
	rule__Open__Group_1_4_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Open__Group_1_4_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOpenAccess().getKEYWORDSTerminalRuleCall_1_4_1_0()); }
	RULE_KEYWORDS
	{ after(grammarAccess.getOpenAccess().getKEYWORDSTerminalRuleCall_1_4_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Open__Group_1_4_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Open__Group_1_4_1__1__Impl
	rule__Open__Group_1_4_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Open__Group_1_4_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOpenAccess().getEqualsSignKeyword_1_4_1_1()); }
	'='
	{ after(grammarAccess.getOpenAccess().getEqualsSignKeyword_1_4_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Open__Group_1_4_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Open__Group_1_4_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Open__Group_1_4_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOpenAccess().getValueAssignment_1_4_1_2()); }
	(rule__Open__ValueAssignment_1_4_1_2)
	{ after(grammarAccess.getOpenAccess().getValueAssignment_1_4_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Close__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Close__Group__0__Impl
	rule__Close__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Close__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCloseAccess().getCloseAction_0()); }
	()
	{ after(grammarAccess.getCloseAccess().getCloseAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Close__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Close__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Close__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCloseAccess().getGroup_1()); }
	(rule__Close__Group_1__0)
	{ after(grammarAccess.getCloseAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Close__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Close__Group_1__0__Impl
	rule__Close__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Close__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCloseAccess().getLessThanSignSolidusKeyword_1_0()); }
	'</'
	{ after(grammarAccess.getCloseAccess().getLessThanSignSolidusKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Close__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Close__Group_1__1__Impl
	rule__Close__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Close__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCloseAccess().getHEADTerminalRuleCall_1_1()); }
	RULE_HEAD
	{ after(grammarAccess.getCloseAccess().getHEADTerminalRuleCall_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Close__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Close__Group_1__2__Impl
	rule__Close__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Close__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCloseAccess().getColonKeyword_1_2()); }
	':'
	{ after(grammarAccess.getCloseAccess().getColonKeyword_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Close__Group_1__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Close__Group_1__3__Impl
	rule__Close__Group_1__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Close__Group_1__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCloseAccess().getKEYWORDSTerminalRuleCall_1_3()); }
	RULE_KEYWORDS
	{ after(grammarAccess.getCloseAccess().getKEYWORDSTerminalRuleCall_1_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Close__Group_1__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Close__Group_1__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Close__Group_1__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCloseAccess().getGreaterThanSignKeyword_1_4()); }
	'>'
	{ after(grammarAccess.getCloseAccess().getGreaterThanSignKeyword_1_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Model__ModelAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelAccess().getModelXmlParserRuleCall_0()); }
		ruleXml
		{ after(grammarAccess.getModelAccess().getModelXmlParserRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Xml__Opening_tagAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getXmlAccess().getOpening_tagOpeningParserRuleCall_1_0()); }
		ruleOpening
		{ after(grammarAccess.getXmlAccess().getOpening_tagOpeningParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Opening__ProvaAssignment_0_1_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOpeningAccess().getProvaOpenParserRuleCall_0_1_0_0_0()); }
		ruleOpen
		{ after(grammarAccess.getOpeningAccess().getProvaOpenParserRuleCall_0_1_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Opening__Prova1Assignment_0_1_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOpeningAccess().getProva1CloseParserRuleCall_0_1_0_1_0()); }
		ruleClose
		{ after(grammarAccess.getOpeningAccess().getProva1CloseParserRuleCall_0_1_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Opening__ProvaAssignment_0_1_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOpeningAccess().getProvaOpenParserRuleCall_0_1_1_0_0()); }
		ruleOpen
		{ after(grammarAccess.getOpeningAccess().getProvaOpenParserRuleCall_0_1_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Opening__Prova1Assignment_0_1_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOpeningAccess().getProva1CloseParserRuleCall_0_1_1_1_0()); }
		ruleClose
		{ after(grammarAccess.getOpeningAccess().getProva1CloseParserRuleCall_0_1_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Opening__ValueAssignment_0_1_2_0_4_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOpeningAccess().getValueSTRINGTerminalRuleCall_0_1_2_0_4_1_2_0()); }
		RULE_STRING
		{ after(grammarAccess.getOpeningAccess().getValueSTRINGTerminalRuleCall_0_1_2_0_4_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Opening__ValueAssignment_1_1_0_4_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOpeningAccess().getValueSTRINGTerminalRuleCall_1_1_0_4_1_2_0()); }
		RULE_STRING
		{ after(grammarAccess.getOpeningAccess().getValueSTRINGTerminalRuleCall_1_1_0_4_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Open__ValueAssignment_1_4_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOpenAccess().getValueSTRINGTerminalRuleCall_1_4_1_2_0()); }
		RULE_STRING
		{ after(grammarAccess.getOpenAccess().getValueSTRINGTerminalRuleCall_1_4_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Open__ProvaAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOpenAccess().getProvaOpeningParserRuleCall_2_1_0()); }
		ruleOpening
		{ after(grammarAccess.getOpenAccess().getProvaOpeningParserRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_HEAD : ('bpmn'|'bpmndi'|'camunda'|'xsi');

RULE_KEYWORDS : ('id'|'name'|'isExecutable'|'sourceRef'|'processRef'|'targetRef'|'calledElement'|'type'|'expression'|'value'|'resultVariable'|'asyncBefore'|'class'|'event'|'startEvent'|'task'|'messageEventDefinition'|'sequenceFlow'|'condition'|'association'|'outgoing'|'serviceTask'|'process'|'incoming'|'intermediateCatchEvent'|'conditionalEventDefinition'|'endEvent'|'textAnnotation'|'text'|'dataStoreReference'|'callActivity'|'laneSet'|'lane'|'flowNodeRef'|'dataOutputAssociation'|'exclusiveGateway'|'extensionElements'|'inputOutput'|'list'|'inputParameter'|'outputParameter'|'properties'|'property'|'field'|'string'|'scriptTask'|'script'|'executionListener'|'timerEventDefinition'|'timeDuration'|'parallelGateway');

RULE_BODY : ('a'..'z'|'A'..'Z'|RULE_INT|'_')*;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

fragment RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
