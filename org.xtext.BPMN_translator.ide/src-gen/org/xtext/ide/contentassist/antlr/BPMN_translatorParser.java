/*
 * generated by Xtext 2.23.0
 */
package org.xtext.ide.contentassist.antlr;

import com.google.common.collect.ImmutableMap;
import com.google.inject.Inject;
import com.google.inject.Singleton;
import java.util.Map;
import org.eclipse.xtext.AbstractElement;
import org.eclipse.xtext.ide.editor.contentassist.antlr.AbstractContentAssistParser;
import org.xtext.ide.contentassist.antlr.internal.InternalBPMN_translatorParser;
import org.xtext.services.BPMN_translatorGrammarAccess;

public class BPMN_translatorParser extends AbstractContentAssistParser {

	@Singleton
	public static final class NameMappings {
		
		private final Map<AbstractElement, String> mappings;
		
		@Inject
		public NameMappings(BPMN_translatorGrammarAccess grammarAccess) {
			ImmutableMap.Builder<AbstractElement, String> builder = ImmutableMap.builder();
			init(builder, grammarAccess);
			this.mappings = builder.build();
		}
		
		public String getRuleName(AbstractElement element) {
			return mappings.get(element);
		}
		
		private static void init(ImmutableMap.Builder<AbstractElement, String> builder, BPMN_translatorGrammarAccess grammarAccess) {
			builder.put(grammarAccess.getElementAccess().getAlternatives(), "rule__Element__Alternatives");
			builder.put(grammarAccess.getContentAccess().getAlternatives_1(), "rule__Content__Alternatives_1");
			builder.put(grammarAccess.getContentAccess().getTypeAlternatives_1_0_0_0(), "rule__Content__TypeAlternatives_1_0_0_0");
			builder.put(grammarAccess.getContentAccess().getBodyAlternatives_1_2_1_0(), "rule__Content__BodyAlternatives_1_2_1_0");
			builder.put(grammarAccess.getOpenAccess().getAlternatives_4(), "rule__Open__Alternatives_4");
			builder.put(grammarAccess.getOpenAccess().getAlternatives_4_1_0(), "rule__Open__Alternatives_4_1_0");
			builder.put(grammarAccess.getSingletonAccess().getAlternatives_1_4(), "rule__Singleton__Alternatives_1_4");
			builder.put(grammarAccess.getVariablesAccess().getAlternatives(), "rule__Variables__Alternatives");
			builder.put(grammarAccess.getConditionsAccess().getAlternatives(), "rule__Conditions__Alternatives");
			builder.put(grammarAccess.getPreconditionsAccess().getAlternatives(), "rule__Preconditions__Alternatives");
			builder.put(grammarAccess.getProtocolAccess().getAlternatives(), "rule__Protocol__Alternatives");
			builder.put(grammarAccess.getHttp_dataAccess().getAlternatives_1(), "rule__Http_data__Alternatives_1");
			builder.put(grammarAccess.getMqtt_dataAccess().getAlternatives_1(), "rule__Mqtt_data__Alternatives_1");
			builder.put(grammarAccess.getMqtt_dataAccess().getAlternatives_1_6_2(), "rule__Mqtt_data__Alternatives_1_6_2");
			builder.put(grammarAccess.getSensorAccess().getAlternatives(), "rule__Sensor__Alternatives");
			builder.put(grammarAccess.getSensor_dataAccess().getAlternatives_1(), "rule__Sensor_data__Alternatives_1");
			builder.put(grammarAccess.getXmlAccess().getGroup(), "rule__Xml__Group__0");
			builder.put(grammarAccess.getPrologAccess().getGroup(), "rule__Prolog__Group__0");
			builder.put(grammarAccess.getElementAccess().getGroup_0(), "rule__Element__Group_0__0");
			builder.put(grammarAccess.getContentAccess().getGroup(), "rule__Content__Group__0");
			builder.put(grammarAccess.getContentAccess().getGroup_1_0(), "rule__Content__Group_1_0__0");
			builder.put(grammarAccess.getContentAccess().getGroup_1_2(), "rule__Content__Group_1_2__0");
			builder.put(grammarAccess.getOpenAccess().getGroup(), "rule__Open__Group__0");
			builder.put(grammarAccess.getOpenAccess().getGroup_4_0(), "rule__Open__Group_4_0__0");
			builder.put(grammarAccess.getOpenAccess().getGroup_4_1(), "rule__Open__Group_4_1__0");
			builder.put(grammarAccess.getSingletonAccess().getGroup(), "rule__Singleton__Group__0");
			builder.put(grammarAccess.getSingletonAccess().getGroup_1(), "rule__Singleton__Group_1__0");
			builder.put(grammarAccess.getSingletonAccess().getGroup_1_4_0(), "rule__Singleton__Group_1_4_0__0");
			builder.put(grammarAccess.getSingletonAccess().getGroup_1_4_1(), "rule__Singleton__Group_1_4_1__0");
			builder.put(grammarAccess.getCloseAccess().getGroup(), "rule__Close__Group__0");
			builder.put(grammarAccess.getCloseAccess().getGroup_1(), "rule__Close__Group_1__0");
			builder.put(grammarAccess.getVariablesAccess().getGroup_0(), "rule__Variables__Group_0__0");
			builder.put(grammarAccess.getVariablesAccess().getGroup_1(), "rule__Variables__Group_1__0");
			builder.put(grammarAccess.getCodexAccess().getGroup(), "rule__Codex__Group__0");
			builder.put(grammarAccess.getDeviceAccess().getGroup(), "rule__Device__Group__0");
			builder.put(grammarAccess.getProtocolAccess().getGroup_0(), "rule__Protocol__Group_0__0");
			builder.put(grammarAccess.getProtocolAccess().getGroup_0_2(), "rule__Protocol__Group_0_2__0");
			builder.put(grammarAccess.getProtocolAccess().getGroup_1(), "rule__Protocol__Group_1__0");
			builder.put(grammarAccess.getProtocolAccess().getGroup_1_2(), "rule__Protocol__Group_1_2__0");
			builder.put(grammarAccess.getHttp_dataAccess().getGroup(), "rule__Http_data__Group__0");
			builder.put(grammarAccess.getHttp_dataAccess().getGroup_1_0(), "rule__Http_data__Group_1_0__0");
			builder.put(grammarAccess.getHttp_dataAccess().getGroup_1_1(), "rule__Http_data__Group_1_1__0");
			builder.put(grammarAccess.getHttp_dataAccess().getGroup_1_2(), "rule__Http_data__Group_1_2__0");
			builder.put(grammarAccess.getHttp_dataAccess().getGroup_1_3(), "rule__Http_data__Group_1_3__0");
			builder.put(grammarAccess.getHttp_dataAccess().getGroup_1_4(), "rule__Http_data__Group_1_4__0");
			builder.put(grammarAccess.getHttp_dataAccess().getGroup_1_5(), "rule__Http_data__Group_1_5__0");
			builder.put(grammarAccess.getHttp_dataAccess().getGroup_1_6(), "rule__Http_data__Group_1_6__0");
			builder.put(grammarAccess.getMqtt_dataAccess().getGroup(), "rule__Mqtt_data__Group__0");
			builder.put(grammarAccess.getMqtt_dataAccess().getGroup_1_0(), "rule__Mqtt_data__Group_1_0__0");
			builder.put(grammarAccess.getMqtt_dataAccess().getGroup_1_1(), "rule__Mqtt_data__Group_1_1__0");
			builder.put(grammarAccess.getMqtt_dataAccess().getGroup_1_2(), "rule__Mqtt_data__Group_1_2__0");
			builder.put(grammarAccess.getMqtt_dataAccess().getGroup_1_3(), "rule__Mqtt_data__Group_1_3__0");
			builder.put(grammarAccess.getMqtt_dataAccess().getGroup_1_4(), "rule__Mqtt_data__Group_1_4__0");
			builder.put(grammarAccess.getMqtt_dataAccess().getGroup_1_5(), "rule__Mqtt_data__Group_1_5__0");
			builder.put(grammarAccess.getMqtt_dataAccess().getGroup_1_5_2(), "rule__Mqtt_data__Group_1_5_2__0");
			builder.put(grammarAccess.getMqtt_dataAccess().getGroup_1_6(), "rule__Mqtt_data__Group_1_6__0");
			builder.put(grammarAccess.getMqtt_dataAccess().getGroup_1_6_2_0(), "rule__Mqtt_data__Group_1_6_2_0__0");
			builder.put(grammarAccess.getMqtt_dataAccess().getGroup_1_6_2_1(), "rule__Mqtt_data__Group_1_6_2_1__0");
			builder.put(grammarAccess.getMqtt_network_dataAccess().getGroup(), "rule__Mqtt_network_data__Group__0");
			builder.put(grammarAccess.getMqtt_deviceAccess().getGroup(), "rule__Mqtt_device__Group__0");
			builder.put(grammarAccess.getSensorAccess().getGroup_0(), "rule__Sensor__Group_0__0");
			builder.put(grammarAccess.getSensorAccess().getGroup_1(), "rule__Sensor__Group_1__0");
			builder.put(grammarAccess.getSensor_dataAccess().getGroup(), "rule__Sensor_data__Group__0");
			builder.put(grammarAccess.getSensor_dataAccess().getGroup_1_0(), "rule__Sensor_data__Group_1_0__0");
			builder.put(grammarAccess.getSensor_dataAccess().getGroup_1_1(), "rule__Sensor_data__Group_1_1__0");
			builder.put(grammarAccess.getSensor_dataAccess().getGroup_1_2(), "rule__Sensor_data__Group_1_2__0");
			builder.put(grammarAccess.getModelAccess().getModelAssignment(), "rule__Model__ModelAssignment");
			builder.put(grammarAccess.getXmlAccess().getProvaAssignment_2(), "rule__Xml__ProvaAssignment_2");
			builder.put(grammarAccess.getElementAccess().getOpenAssignment_0_0(), "rule__Element__OpenAssignment_0_0");
			builder.put(grammarAccess.getElementAccess().getContentsAssignment_0_1(), "rule__Element__ContentsAssignment_0_1");
			builder.put(grammarAccess.getElementAccess().getClose_tagAssignment_0_2(), "rule__Element__Close_tagAssignment_0_2");
			builder.put(grammarAccess.getElementAccess().getSingleton_tagAssignment_1(), "rule__Element__Singleton_tagAssignment_1");
			builder.put(grammarAccess.getContentAccess().getTypeAssignment_1_0_0(), "rule__Content__TypeAssignment_1_0_0");
			builder.put(grammarAccess.getContentAccess().getCodexAssignment_1_0_2(), "rule__Content__CodexAssignment_1_0_2");
			builder.put(grammarAccess.getContentAccess().getElementAssignment_1_1(), "rule__Content__ElementAssignment_1_1");
			builder.put(grammarAccess.getContentAccess().getBodyAssignment_1_2_0(), "rule__Content__BodyAssignment_1_2_0");
			builder.put(grammarAccess.getContentAccess().getBodyAssignment_1_2_1(), "rule__Content__BodyAssignment_1_2_1");
			builder.put(grammarAccess.getContentAccess().getBodyAssignment_1_2_2(), "rule__Content__BodyAssignment_1_2_2");
			builder.put(grammarAccess.getContentAccess().getKeywordsAssignment_1_3(), "rule__Content__KeywordsAssignment_1_3");
			builder.put(grammarAccess.getContentAccess().getDataAssignment_1_4(), "rule__Content__DataAssignment_1_4");
			builder.put(grammarAccess.getOpenAccess().getHeadAssignment_1(), "rule__Open__HeadAssignment_1");
			builder.put(grammarAccess.getOpenAccess().getKeywordsAssignment_3(), "rule__Open__KeywordsAssignment_3");
			builder.put(grammarAccess.getOpenAccess().getHead1Assignment_4_0_0(), "rule__Open__Head1Assignment_4_0_0");
			builder.put(grammarAccess.getOpenAccess().getHead1Assignment_4_1_0_0(), "rule__Open__Head1Assignment_4_1_0_0");
			builder.put(grammarAccess.getOpenAccess().getKeywords1Assignment_4_1_0_1(), "rule__Open__Keywords1Assignment_4_1_0_1");
			builder.put(grammarAccess.getOpenAccess().getValueAssignment_4_1_2(), "rule__Open__ValueAssignment_4_1_2");
			builder.put(grammarAccess.getSingletonAccess().getKeywordsAssignment_1_3(), "rule__Singleton__KeywordsAssignment_1_3");
			builder.put(grammarAccess.getSingletonAccess().getKeywords1Assignment_1_4_1_0(), "rule__Singleton__Keywords1Assignment_1_4_1_0");
			builder.put(grammarAccess.getSingletonAccess().getValueAssignment_1_4_1_2(), "rule__Singleton__ValueAssignment_1_4_1_2");
			builder.put(grammarAccess.getCodexAccess().getDevice_codeAssignment_0(), "rule__Codex__Device_codeAssignment_0");
			builder.put(grammarAccess.getCodexAccess().getProtocolAssignment_1(), "rule__Codex__ProtocolAssignment_1");
			builder.put(grammarAccess.getCodexAccess().getSensor_codeAssignment_2(), "rule__Codex__Sensor_codeAssignment_2");
			builder.put(grammarAccess.getDeviceAccess().getDeviceAssignment_2(), "rule__Device__DeviceAssignment_2");
			builder.put(grammarAccess.getDeviceAccess().getIdAssignment_5(), "rule__Device__IdAssignment_5");
			builder.put(grammarAccess.getProtocolAccess().getPnameAssignment_0_0(), "rule__Protocol__PnameAssignment_0_0");
			builder.put(grammarAccess.getProtocolAccess().getMqtt_dataAssignment_0_2_0(), "rule__Protocol__Mqtt_dataAssignment_0_2_0");
			builder.put(grammarAccess.getProtocolAccess().getMqtt_deviceAssignment_0_2_1(), "rule__Protocol__Mqtt_deviceAssignment_0_2_1");
			builder.put(grammarAccess.getProtocolAccess().getPnameAssignment_1_0(), "rule__Protocol__PnameAssignment_1_0");
			builder.put(grammarAccess.getProtocolAccess().getHttp_dataAssignment_1_2_0(), "rule__Protocol__Http_dataAssignment_1_2_0");
			builder.put(grammarAccess.getProtocolAccess().getMqtt_deviceAssignment_1_2_1(), "rule__Protocol__Mqtt_deviceAssignment_1_2_1");
			builder.put(grammarAccess.getHttp_dataAccess().getPnameAssignment_1_0_2(), "rule__Http_data__PnameAssignment_1_0_2");
			builder.put(grammarAccess.getHttp_dataAccess().getServer_ipAssignment_1_1_2(), "rule__Http_data__Server_ipAssignment_1_1_2");
			builder.put(grammarAccess.getHttp_dataAccess().getRequest_typeAssignment_1_2_2(), "rule__Http_data__Request_typeAssignment_1_2_2");
			builder.put(grammarAccess.getHttp_dataAccess().getContent_typeAssignment_1_3_2(), "rule__Http_data__Content_typeAssignment_1_3_2");
			builder.put(grammarAccess.getHttp_dataAccess().getHeaderAssignment_1_4_2(), "rule__Http_data__HeaderAssignment_1_4_2");
			builder.put(grammarAccess.getHttp_dataAccess().getDataAssignment_1_5_2(), "rule__Http_data__DataAssignment_1_5_2");
			builder.put(grammarAccess.getHttp_dataAccess().getMqtt_network_dataAssignment_1_6_2(), "rule__Http_data__Mqtt_network_dataAssignment_1_6_2");
			builder.put(grammarAccess.getMqtt_dataAccess().getPnameAssignment_1_0_2(), "rule__Mqtt_data__PnameAssignment_1_0_2");
			builder.put(grammarAccess.getMqtt_dataAccess().getBroker_userAssignment_1_1_2(), "rule__Mqtt_data__Broker_userAssignment_1_1_2");
			builder.put(grammarAccess.getMqtt_dataAccess().getBroker_passwordAssignment_1_2_2(), "rule__Mqtt_data__Broker_passwordAssignment_1_2_2");
			builder.put(grammarAccess.getMqtt_dataAccess().getBrokerAssignment_1_3_2(), "rule__Mqtt_data__BrokerAssignment_1_3_2");
			builder.put(grammarAccess.getMqtt_dataAccess().getMqtt_network_dataAssignment_1_4_2(), "rule__Mqtt_data__Mqtt_network_dataAssignment_1_4_2");
			builder.put(grammarAccess.getMqtt_dataAccess().getSubtopicsAssignment_1_5_2_2(), "rule__Mqtt_data__SubtopicsAssignment_1_5_2_2");
			builder.put(grammarAccess.getMqtt_dataAccess().getPubtopicsAssignment_1_6_2_0_2(), "rule__Mqtt_data__PubtopicsAssignment_1_6_2_0_2");
			builder.put(grammarAccess.getMqtt_dataAccess().getValueAssignment_1_6_2_1_2(), "rule__Mqtt_data__ValueAssignment_1_6_2_1_2");
			builder.put(grammarAccess.getMqtt_network_dataAccess().getSsidAssignment_2(), "rule__Mqtt_network_data__SsidAssignment_2");
			builder.put(grammarAccess.getMqtt_network_dataAccess().getPasswordAssignment_5(), "rule__Mqtt_network_data__PasswordAssignment_5");
			builder.put(grammarAccess.getMqtt_deviceAccess().getDnameAssignment_4(), "rule__Mqtt_device__DnameAssignment_4");
			builder.put(grammarAccess.getSensorAccess().getSnameAssignment_0_0(), "rule__Sensor__SnameAssignment_0_0");
			builder.put(grammarAccess.getSensorAccess().getSensorAssignment_0_2(), "rule__Sensor__SensorAssignment_0_2");
			builder.put(grammarAccess.getSensorAccess().getSnameAssignment_1_0(), "rule__Sensor__SnameAssignment_1_0");
			builder.put(grammarAccess.getSensorAccess().getSensorAssignment_1_2(), "rule__Sensor__SensorAssignment_1_2");
			builder.put(grammarAccess.getSensor_dataAccess().getPnameAssignment_1_0_2(), "rule__Sensor_data__PnameAssignment_1_0_2");
			builder.put(grammarAccess.getSensor_dataAccess().getPinsAssignment_1_1_2(), "rule__Sensor_data__PinsAssignment_1_1_2");
			builder.put(grammarAccess.getSensor_dataAccess().getSensor_idAssignment_1_2_2(), "rule__Sensor_data__Sensor_idAssignment_1_2_2");
		}
	}
	
	@Inject
	private NameMappings nameMappings;

	@Inject
	private BPMN_translatorGrammarAccess grammarAccess;

	@Override
	protected InternalBPMN_translatorParser createParser() {
		InternalBPMN_translatorParser result = new InternalBPMN_translatorParser(null);
		result.setGrammarAccess(grammarAccess);
		return result;
	}

	@Override
	protected String getRuleName(AbstractElement element) {
		return nameMappings.getRuleName(element);
	}

	@Override
	protected String[] getInitialHiddenTokens() {
		return new String[] { "RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT" };
	}

	public BPMN_translatorGrammarAccess getGrammarAccess() {
		return this.grammarAccess;
	}

	public void setGrammarAccess(BPMN_translatorGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}
	
	public NameMappings getNameMappings() {
		return nameMappings;
	}
	
	public void setNameMappings(NameMappings nameMappings) {
		this.nameMappings = nameMappings;
	}
}
